{"version":3,"sources":["components/footer.js","hooks/useresizeobserver.js","components/level.js","components/minigraph.js","components/loaders/mapvisualizer.js","components/maplegend.js","components/mapvisualizer.js","components/tooltips.js","components/mapexplorer.js","components/timeseries.js","components/timeseriesexplorer.js","components/timeline.js","components/updates.js","components/actions.js","components/search.js","components/row.js","components/table.js","hooks/usestickyswr.js","components/home.js"],"names":["React","memo","props","t","useTranslation","className","style","animationDelay","href","target","rel","justifyContent","useResizeObserver","ref","useState","dimensions","setDimensions","useEffect","observeTarget","current","resizeObserver","ResizeObserver","entries","observer","forEach","entry","index","contentRect","observe","unobserve","LevelItem","statistic","total","delta","spring","useSpring","from","config","stiff","Fragment","capitalize","h4","interpolate","formatNumber","Math","floor","h1","data","useTrail","transform","opacity","trail","set","PRIMARY_STATISTICS","map","div","key","classnames","getStatistic","prevProps","currProps","equal","timeseries","timelineDate","date","refs","useRef","dates","useMemo","today","getIndiaYesterdayISO","pastDates","Object","keys","filter","cutOffDate","formatISO","subDays","parseIndiaDate","MINIGRAPH_LOOKBACK_DAYS","representation","T","length","margin","chartRight","chartBottom","xScale","d3","clamp","domain","range","dailyMin","dailyMax","max","domainMinMax","yScale","pathLength","svg","color","COLORS","line","curve","x","y","selectAll","join","enter","append","attr","this","getTotalLength","call","transition","delay","duration","update","attrTween","previous","interpolatePath","el","width","height","viewBox","preserveAspectRatio","MapVisualizerLoader","windowWidth","window","innerWidth","mapHeight","MAP_LEGEND_HEIGHT","speed","backgroundColor","cx","cy","r","MapLegend","mapScale","mapOption","svgRef","wrapperRef","getBoundingClientRect","MAP_OPTIONS","HOTSPOTS","D3_TRANSITION_DURATION","select","remove","domainMax","d","copy","tickSize","tickPadding","tickValues","tickFormat","g","title","marginTop","marginRight","marginBottom","marginLeft","ticks","ordinalWeights","tickAdjust","n","min","rangeRound","ramp","toDataURL","interpolator","assign","undefined","round","i","invertExtent","thresholds","quantiles","thresholdFormat","widthScale","reduce","a","b","xPos","w","slice","acc","bandwidth","on","text","node","legend","capitalizeAll","PER_MILLION","TOTAL","Number","isInteger","ZONES","id","position","canvas","context","getContext","fillStyle","fillRect","colorInterpolator","confirmed","active","recovered","deceased","tested","getTotalStatistic","normalizer","MapVisualizer","currentMap","changeMap","regionHighlighted","setRegionHighlighted","isCountryLoaded","mapMeta","MAP_META","code","geoData","useSWR","geoDataFile","file","revalidateOnFocus","suspense","statisticMax","stateCodes","stateCode","includes","view","MAP_VIEWS","STATES","option","STATE_POPULATIONS_MIL","districts","values","districtData","statisticTotal","ZONE_COLORS","nice","topology","topojson","objects","graphObjectStates","graphObjectDistricts","projection","fitSize","path","features","f","district","properties","state","st_nm","obj","fillColor","STATE_CODES","stateData","zone","strokeColor","onceTouchedRegion","sel","districtName","stopPropagation","mapType","MAP_TYPES","STATE","circlesData","value","UNKNOWN_DISTRICT_KEY","sort","centroid","meshStates","COUNTRY","meshDistricts","DISTRICTS","STATE_NAMES","each","highlighted","parentNode","appendChild","colorInterpolationFilters","type","testedToolTip","onClick","e","data-for","data-tip","data-event","data-event-off","effect","multiline","scrollHide","globalEventOff","anchor","setAnchor","mapStatistic","setMapStatistic","history","useHistory","mapExplorerRef","setCurrentMap","currentMapMeta","currentMapData","switchMap","useCallback","newMapMeta","topDistrict","ReactDOM","unstable_batchedUpdates","panelState","produce","draft","hoveredRegion","hoveredData","name","population_millions","springs","useSprings","MAP_STATISTICS","tension","stickied","hidden","action","focused","h6","formatDate","meta","source","push","formatLastUpdated","fallback","clientWidth","handleTabClick","TT","chartType","isUniform","isLog","highlightedDate","setHighlightedDate","numTicksX","xAxis","xAxis2","yAxis","uniformScaleMin","uniformScaleMax","yScaleUniformLinear","yScaleUniformLog","mousemove","xm","invert","bisectDate","left","mouseout","TIMESERIES_STATISTICS","generateYScale","getStatisticDelta","deltaToday","yesterday","element","TIMESERIES_OPTIONS","MONTH","timeseriesOption","setTimeseriesOption","useLocalStorage","setChartType","setIsUniform","setIsLog","explorerElement","isVisible","useIsVisible","once","TWO_WEEKS","sub","weeks","months","display","TIMESERIES_CHART_TYPES","ctype","htmlFor","checked","aria-label","onChange","disabled","selected","size","setIsTimelineMode","setDate","useMeasure","timelineElement","setIndex","bind","useDrag","down","xDelta","xDir","direction","distance","cancel","clampedIndex","getClampedIndex","setClampedDate","hideTimeline","setSprings","handleKeyPress","useKeyPressEvent","setTimeout","getDate","format","Date","timeline","useTransition","hasOwnProperty","leave","handleClick","item","h5","newDate","currentDate","Updates","updates","useLayoutEffect","reverse","activity","replace","activityDate","timestamp","formatDistance","dangerouslySetInnerHTML","__html","showUpdates","setShowUpdates","newUpdate","setNewUpdate","lastViewedLog","setLastViewedLog","isTimelineMode","fetcher","lastTimestamp","minHeight","ActionsPanel","Bell","BellOff","TimelineIcon","xmlns","fillRule","mass","friction","to","o","pointerEvents","utcToZonedTime","parse","getTimeFromMilliseconds","engine","Bloodhound","initialize","local","STATE_CODES_ARRAY","queryTokenizer","tokenizers","whitespace","datumTokenizer","districtEngine","limit","indexRemote","remote","url","response","stateName","essentialsEngine","resources","essentialSuggestions","locationSuggestions","searchValue","setSearchValue","expand","setExpand","results","setResults","searchInput","handleSearch","essentialsSync","datums","result","essentialsObj","nameoftheorganisation","category","website","contact","description","descriptionandorserviceprovided","city","phonenumber","search","stateObj","route","districtObj","setNativeValue","valueSetter","getOwnPropertyDescriptor","prototype","getPrototypeOf","prototypeValueSetter","useDebounce","draftResults","splice","label","onFocus","event","onBlur","ESSENTIALS_CATEGORIES","split","onMouseDown","preventDefault","dispatchEvent","Event","bubbles","suggestion","useBreakpoint","createBreakpoint","L","S","Cell","gentle","span","DistrictHeaderCell","handleSortClick","sortData","breakpoint","abbreviate","sortColumn","isAscending","DistrictRow","highlightDistrict","draftRegionHighlighted","onMouseEnter","notes","wrap","noDelay","showDistricts","setShowDistricts","setSortData","Chevron","rotateRightDown","rotateDownRight","draftSortData","sortingFunction","districtNameA","districtNameB","localeCompare","highlightState","_setShowDistrict","colSpan","paddingBottom","last_updated","align","XL","StateHeaderCell","handleSort","FineprintTop","stateCodeA","stateCodeB","statisticA","statisticB","wobbly","table","useStickySWR","swrOptions","options","setOptions","args","isValidating","error","rest","useUpdateEffect","draftOptions","initialData","Home","revalidateOnMount","refreshInterval","homeRightElement","Set","Helmet","content"],"mappings":"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","file":"static/js/Home.f57bbbab.chunk.js","sourcesContent":["import React from 'react';\nimport * as Icon from 'react-feather';\nimport {useTranslation} from 'react-i18next';\n\nfunction Footer(props) {\n  const {t} = useTranslation();\n\n  return (\n    <footer className=\"fadeInUp\" style={{animationDelay: '2s'}}>\n      <h5>{t('We stand with everyone fighting on the frontlines')}</h5>\n\n      <div className=\"link\">\n        <a\n          href=\"https://github.com/covid19india\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          covid19india\n        </a>\n      </div>\n\n      <a\n        href=\"https://github.com/covid19india/covid19india-react\"\n        className=\"button github\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <Icon.GitHub />\n        <span>{t('Open Sourced on GitHub')}</span>\n      </a>\n\n      <a\n        className=\"button excel\"\n        href=\"http://patientdb.covid19india.org\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <Icon.Database />\n        <span>{t('Crowdsourced Patient Database')}</span>\n      </a>\n\n      <a\n        href=\"https://twitter.com/covid19indiaorg\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        className=\"button twitter\"\n        style={{justifyContent: 'center'}}\n      >\n        <Icon.Twitter />\n        <span>{t('View updates on Twitter')}</span>\n      </a>\n\n      <a\n        href=\"https://bit.ly/covid19crowd\"\n        className=\"button telegram\"\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n      >\n        <Icon.MessageCircle />\n        <span>{t('Join Telegram to Collaborate!')}</span>\n      </a>\n    </footer>\n  );\n}\n\nexport default React.memo(Footer);\n","import {ResizeObserver} from '@juggle/resize-observer';\nimport {useState, useEffect} from 'react';\n\nexport const useResizeObserver = (ref) => {\n  const [dimensions, setDimensions] = useState(null);\n  useEffect(() => {\n    const observeTarget = ref.current;\n    const resizeObserver = new ResizeObserver((entries, observer) => {\n      entries.forEach((entry, index) => {\n        setDimensions(entry.contentRect);\n      });\n    });\n    resizeObserver.observe(observeTarget);\n    return () => {\n      resizeObserver.unobserve(observeTarget);\n    };\n  }, [ref]);\n  return dimensions;\n};\n\nexport default useResizeObserver;\n","import {PRIMARY_STATISTICS} from '../constants';\nimport {capitalize, formatNumber, getStatistic} from '../utils/commonfunctions';\n\nimport classnames from 'classnames';\nimport equal from 'fast-deep-equal';\nimport React from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {animated, useSpring, config, useTrail} from 'react-spring';\n\nfunction PureLevelItem({statistic, total, delta}) {\n  const {t} = useTranslation();\n  const spring = useSpring(\n    {\n      total: total,\n      delta: delta,\n      from: {total: total, delta: delta},\n    },\n    config.stiff\n  );\n\n  return (\n    <React.Fragment>\n      <h5>{capitalize(t(statistic))}</h5>\n      <animated.h4>\n        {statistic !== 'active'\n          ? spring.delta.interpolate((delta) =>\n              delta > 0 ? `+${formatNumber(Math.floor(delta))}` : '\\u2764'\n            )\n          : '\\u00A0'}\n      </animated.h4>\n      <animated.h1>\n        {spring.total.interpolate((total) => formatNumber(Math.floor(total)))}\n      </animated.h1>\n    </React.Fragment>\n  );\n}\n\nconst LevelItem = React.memo(PureLevelItem);\n\nfunction Level({data}) {\n  const [trail, set] = useTrail(4, () => ({\n    transform: 'translate3d(0, 20px, 0)',\n    opacity: 0,\n    config: config.stiff,\n  }));\n\n  set({transform: 'translate3d(0, 0px, 0)', opacity: 1});\n\n  return (\n    <div className=\"Level\">\n      {PRIMARY_STATISTICS.map((statistic, index) => (\n        <animated.div\n          key={index}\n          className={classnames('level-item', `is-${statistic}`)}\n          style={trail[index]}\n        >\n          <LevelItem\n            {...{statistic}}\n            total={getStatistic(data, 'total', statistic)}\n            delta={getStatistic(data, 'delta', statistic)}\n          />\n        </animated.div>\n      ))}\n    </div>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (\n    !equal(\n      getStatistic(prevProps.data, 'total', 'active'),\n      getStatistic(currProps.data, 'total', 'active')\n    )\n  ) {\n    return false;\n  }\n  return true;\n};\n\nexport default React.memo(Level, isEqual);\n","import {\n  COLORS,\n  MINIGRAPH_LOOKBACK_DAYS,\n  PRIMARY_STATISTICS,\n} from '../constants';\nimport {\n  getStatistic,\n  getIndiaYesterdayISO,\n  parseIndiaDate,\n} from '../utils/commonfunctions';\n\nimport classnames from 'classnames';\nimport * as d3 from 'd3';\nimport {interpolatePath} from 'd3-interpolate-path';\nimport {formatISO, subDays} from 'date-fns';\nimport equal from 'fast-deep-equal';\nimport React, {useEffect, useRef, useMemo} from 'react';\n\nfunction Minigraph({timeseries, date: timelineDate}) {\n  const refs = useRef([]);\n\n  const dates = useMemo(() => {\n    const today = timelineDate || getIndiaYesterdayISO();\n    const pastDates = Object.keys(timeseries || {}).filter(\n      (date) => date <= today\n    );\n    const cutOffDate = formatISO(\n      subDays(parseIndiaDate(today), MINIGRAPH_LOOKBACK_DAYS),\n      {representation: 'date'}\n    );\n    return pastDates.filter((date) => date >= cutOffDate);\n  }, [timeseries, timelineDate]);\n\n  useEffect(() => {\n    const T = dates.length;\n\n    const margin = {top: 10, right: 5, bottom: 20, left: 5};\n    const chartRight = 100 - margin.right;\n    const chartBottom = 100 - margin.bottom;\n\n    const xScale = d3\n      .scaleTime()\n      .clamp(true)\n      .domain([parseIndiaDate(dates[0]), parseIndiaDate(dates[T - 1])])\n      .range([margin.left, chartRight]);\n\n    const dailyMin = d3.min(dates, (date) =>\n      getStatistic(timeseries[date], 'delta', 'active')\n    );\n\n    const dailyMax = d3.max(dates, (date) =>\n      Math.max(\n        getStatistic(timeseries[date], 'delta', 'confirmed'),\n        getStatistic(timeseries[date], 'delta', 'recovered'),\n        getStatistic(timeseries[date], 'delta', 'deceased')\n      )\n    );\n\n    const domainMinMax = Math.max(-dailyMin, dailyMax);\n\n    const yScale = d3\n      .scaleLinear()\n      .clamp(true)\n      .domain([-domainMinMax, domainMinMax])\n      .range([chartBottom, margin.top]);\n\n    refs.current.forEach((ref, index) => {\n      const svg = d3.select(ref);\n      const statistic = PRIMARY_STATISTICS[index];\n      const color = COLORS[statistic];\n\n      const line = d3\n        .line()\n        .curve(d3.curveMonotoneX)\n        .x((date) => xScale(parseIndiaDate(date)))\n        .y((date) =>\n          yScale(getStatistic(timeseries[date], 'delta', statistic))\n        );\n\n      let pathLength;\n      svg\n        .selectAll('path')\n        .data(T ? [dates] : [])\n        .join(\n          (enter) =>\n            enter\n              .append('path')\n              .attr('fill', 'none')\n              .attr('stroke', color + '99')\n              .attr('stroke-width', 2.5)\n              .attr('d', line)\n              .attr('stroke-dasharray', function () {\n                return (pathLength = this.getTotalLength());\n              })\n              .call((enter) =>\n                enter\n                  .attr('stroke-dashoffset', pathLength)\n                  .transition()\n                  .delay(100)\n                  .duration(2500)\n                  .attr('stroke-dashoffset', 0)\n              ),\n          (update) =>\n            update\n              .attr('stroke-dasharray', null)\n              .transition()\n              .duration(500)\n              .attrTween('d', function (date) {\n                const previous = d3.select(this).attr('d');\n                const current = line(date);\n                return interpolatePath(previous, current);\n              })\n        );\n\n      svg\n        .selectAll('circle')\n        .data(T ? [dates[T - 1]] : [])\n        .join(\n          (enter) =>\n            enter\n              .append('circle')\n              .attr('fill', color)\n              .attr('r', 2.5)\n              .attr('cx', (date) => xScale(parseIndiaDate(date)))\n              .attr('cy', (date) =>\n                yScale(getStatistic(timeseries[date], 'delta', statistic))\n              )\n              .style('opacity', 0)\n              .call((enter) =>\n                enter\n                  .transition()\n                  .delay(2100)\n                  .duration(500)\n                  .style('opacity', 1)\n                  .attr('cx', (date) => xScale(parseIndiaDate(date)))\n                  .attr('cy', (date) =>\n                    yScale(getStatistic(timeseries[date], 'delta', statistic))\n                  )\n              ),\n          (update) =>\n            update\n              .transition()\n              .duration(500)\n              .attr('cx', (date) => xScale(parseIndiaDate(date)))\n              .attr('cy', (date) =>\n                yScale(getStatistic(timeseries[date], 'delta', statistic))\n              )\n        );\n    });\n  }, [dates, timeseries]);\n\n  return (\n    <div className=\"Minigraph\">\n      {PRIMARY_STATISTICS.map((statistic, index) => (\n        <div key={statistic} className={classnames('svg-parent')}>\n          <svg\n            ref={(el) => {\n              refs.current[index] = el;\n            }}\n            width=\"100\"\n            height=\"75\"\n            viewBox=\"0 0 100 75\"\n            preserveAspectRatio=\"xMidYMid meet\"\n          />\n        </div>\n      ))}\n    </div>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (!equal(currProps.date, prevProps.date)) {\n    return false;\n  }\n  return true;\n};\n\nexport default React.memo(Minigraph, isEqual);\n","import {COLORS, MAP_LEGEND_HEIGHT} from '../../constants';\n\nimport React from 'react';\nimport ContentLoader from 'react-content-loader';\n\n// Margins as declared in CSS\nexport const MAP_BUFFER_MARGINS = 42;\nexport const INDIA_ASPECT_RATIO = 0.885;\n\nconst MapVisualizerLoader = ({width, statistic}) => {\n  const windowWidth = window.innerWidth;\n  // Default width for loader\n  if (!width) width = windowWidth > 769 ? 480 : windowWidth;\n  // From CSS\n  const scalingFactor = windowWidth > 769 ? 0.9 : 1;\n  const mapHeight = (scalingFactor * width) / INDIA_ASPECT_RATIO;\n  const height = MAP_BUFFER_MARGINS + MAP_LEGEND_HEIGHT + mapHeight;\n  return (\n    <ContentLoader\n      viewBox={`0 0 ${width} ${height}`}\n      height={height}\n      width={width}\n      speed={2}\n      backgroundColor={COLORS[statistic]}\n    >\n      <circle cx={0.4 * width} cy={height / 2} r=\"5\" />\n      <circle cx={0.5 * width} cy={height / 2} r=\"5\" />\n      <circle cx={0.6 * width} cy={height / 2} r=\"5\" />\n    </ContentLoader>\n  );\n};\n\nexport default MapVisualizerLoader;\n","import {\n  D3_TRANSITION_DURATION,\n  MAP_LEGEND_HEIGHT,\n  MAP_OPTIONS,\n  // ZONE_COLORS,\n} from '../constants';\nimport {useResizeObserver} from '../hooks/useresizeobserver';\nimport {capitalizeAll, formatNumber} from '../utils/commonfunctions';\n\nimport * as d3 from 'd3';\nimport React, {useEffect, useRef} from 'react';\n\nfunction MapLegend({data, mapScale, mapOption, statistic}) {\n  const svgRef = useRef(null);\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n\n  // const totalZones = useMemo(() => {\n  //   return Object.values(data).reduce(\n  //     (counts, stateData) => {\n  //       if (stateData?.districts) {\n  //         Object.values(stateData.districts).forEach((districtData) => {\n  //           if (districtData?.zone?.status)\n  //             counts[districtData.zone.status] += 1;\n  //         });\n  //       }\n  //       return counts;\n  //     },\n  //     Object.keys(ZONE_COLORS).reduce((count, zone) => {\n  //       count[zone] = 0;\n  //       return count;\n  //     }, {})\n  //   );\n  // }, [data]);\n\n  useEffect(() => {\n    const svg = d3.select(svgRef.current);\n    let {width, height} =\n      dimensions || wrapperRef.current.getBoundingClientRect();\n\n    if (!width || !height)\n      ({width, height} = wrapperRef.current.getBoundingClientRect());\n\n    // if (mapOption === MAP_OPTIONS.ZONES) {\n    //   svg.call(() =>\n    //     legend({\n    //       svg: svg,\n    //       color: mapScale,\n    //       width: width,\n    //       height: height,\n    //       tickValues: [],\n    //       marginLeft: 2,\n    //       marginRight: 20,\n    //       ordinalWeights: Object.values(totalZones),\n    //     })\n    //   );\n    // }\n    if (mapOption === MAP_OPTIONS.HOTSPOTS) {\n      const t = svg.transition().duration(D3_TRANSITION_DURATION);\n      svg\n        .select('.ramp')\n        .transition(t)\n        .attr('opacity', 0)\n        .attr('xlink:href', null);\n\n      svg\n        .select('.bars')\n        .selectAll('rect')\n        .transition(t)\n        .attr('opacity', 0)\n        .remove();\n      svg.selectAll('.axis > *').remove();\n\n      const domainMax = mapScale.domain()[1];\n\n      const legend = svg\n        .select('.circles')\n        .attr('transform', `translate(48,40)`)\n        .attr('text-anchor', 'middle');\n\n      legend\n        .selectAll('circle')\n        .data([domainMax / 10, (domainMax * 2) / 5, domainMax])\n        .join('circle')\n        .attr('fill', 'none')\n        .attr('stroke', '#ccc')\n        .transition(t)\n        .attr('cy', (d) => -mapScale(d))\n        .attr('r', mapScale);\n\n      const yScale = mapScale.copy().range([0, -2 * mapScale(domainMax)]);\n\n      svg\n        .select('.circleAxis')\n        .attr('transform', `translate(48,50)`)\n        .transition(t)\n        .call(\n          d3\n            .axisRight(yScale)\n            .tickSize(0)\n            .tickPadding(0)\n            .tickValues([domainMax / 10, (domainMax * 2) / 5, domainMax])\n            .tickFormat(d3.format('0~s'))\n        )\n        .selectAll('.tick text')\n        .style('text-anchor', 'middle');\n\n      svg.select('.circleAxis').call((g) => g.select('.domain').remove());\n    } else {\n      svg.call(() =>\n        legend({\n          svg: svg,\n          color: mapScale,\n          title:\n            capitalizeAll(statistic) +\n            (mapOption === MAP_OPTIONS.PER_MILLION\n              ? ' cases per million'\n              : ' cases'),\n          width: width,\n          height: height,\n          ticks: 5,\n          tickFormat: function (d, i, n) {\n            if (mapOption === MAP_OPTIONS.TOTAL && !Number.isInteger(d)) return;\n            if (i === n.length - 1) return formatNumber(d) + '+';\n            return formatNumber(d);\n          },\n          marginLeft: 2,\n          marginRight: 20,\n        })\n      );\n    }\n    svg.attr('class', mapOption === MAP_OPTIONS.ZONES ? 'zone' : '');\n  }, [dimensions, mapScale, mapOption, statistic]); // totalZones\n\n  return (\n    <div\n      className=\"svg-parent maplegend\"\n      style={{height: MAP_LEGEND_HEIGHT}}\n      ref={wrapperRef}\n    >\n      <svg id=\"legend\" preserveAspectRatio=\"xMidYMid meet\" ref={svgRef}>\n        <image className=\"ramp\" />\n        <g className=\"bars\"></g>\n        <g className=\"circles\"></g>\n        <g className=\"circleAxis\"></g>\n        <g className=\"axis\">\n          <text className=\"axistext\" />\n        </g>\n      </svg>\n      <canvas\n        className=\"color-scale\"\n        style={{position: 'absolute', height: 0}}\n      />\n    </div>\n  );\n}\n\nexport default MapLegend;\n\nfunction legend({\n  svg,\n  color,\n  title,\n  tickSize = 6,\n  width = 320,\n  height = 44 + tickSize,\n  marginTop = 18,\n  marginRight = 0,\n  marginBottom = 16 + tickSize,\n  marginLeft = 0,\n  ticks = width / 64,\n  tickFormat,\n  tickValues,\n  ordinalWeights,\n} = {}) {\n  svg.selectAll('.circles > *').remove();\n  svg.selectAll('.circleAxis > *').remove();\n  const t = svg.transition().duration(D3_TRANSITION_DURATION);\n\n  let tickAdjust = (g) => {\n    const ticks = g.selectAll('.tick line');\n    ticks.attr('y1', marginTop + marginBottom - height);\n    // d3.select(ticks.nodes()[ticks.size() - 1]).remove();\n  };\n  let x;\n\n  // Continuous\n  if (color.interpolate) {\n    const n = Math.min(color.domain().length, color.range().length);\n\n    x = color\n      .copy()\n      .rangeRound(\n        d3.quantize(d3.interpolate(marginLeft, width - marginRight), n)\n      );\n\n    svg\n      .select('.ramp')\n      .attr('class', 'ramp')\n      .attr('x', marginLeft)\n      .attr('y', marginTop)\n      .attr('width', width - marginLeft - marginRight)\n      .attr('height', height - marginTop - marginBottom)\n      .attr('preserveAspectRatio', 'none')\n      .attr(\n        'xlink:href',\n        ramp(\n          color.copy().domain(d3.quantize(d3.interpolate(0, 1), n))\n        ).toDataURL()\n      );\n  }\n\n  // Sequential\n  else if (color.interpolator) {\n    svg\n      .select('.bars')\n      .selectAll('rect')\n      .transition(t)\n      .attr('opacity', 0)\n      .remove();\n\n    x = Object.assign(\n      color\n        .copy()\n        .interpolator(d3.interpolateRound(marginLeft, width - marginRight)),\n      {\n        range() {\n          return [marginLeft, width - marginRight];\n        },\n      }\n    );\n\n    svg\n      .select('.ramp')\n      .attr('class', 'ramp')\n      .attr('x', marginLeft)\n      .attr('y', marginTop)\n      .attr('width', width - marginLeft - marginRight)\n      .attr('height', height - marginTop - marginBottom)\n      .attr('preserveAspectRatio', 'none')\n      .attr('xlink:href', ramp(color.interpolator()).toDataURL())\n      .transition(t)\n      .attr('opacity', 1);\n\n    // scaleSequentialQuantile doesn’t implement ticks or tickFormat.\n    if (!x.ticks) {\n      if (tickValues === undefined) {\n        const n = Math.round(ticks + 1);\n        tickValues = d3\n          .range(n)\n          .map((i) => d3.quantile(color.domain(), i / (n - 1)));\n      }\n      if (typeof tickFormat !== 'function') {\n        tickFormat = d3.format(tickFormat === undefined ? ',f' : tickFormat);\n      }\n    }\n  }\n\n  // Threshold\n  else if (color.invertExtent) {\n    const thresholds = color.thresholds\n      ? color.thresholds() // scaleQuantize\n      : color.quantiles\n      ? color.quantiles() // scaleQuantile\n      : color.domain(); // scaleThreshold\n\n    const thresholdFormat =\n      tickFormat === undefined\n        ? (d) => d\n        : typeof tickFormat === 'string'\n        ? d3.format(tickFormat)\n        : tickFormat;\n\n    x = d3\n      .scaleLinear()\n      .domain([-1, color.range().length - 1])\n      .rangeRound([marginLeft, width - marginRight]);\n\n    svg\n      .append('g')\n      .selectAll('rect')\n      .data(color.range())\n      .join('rect')\n      .attr('x', (d, i) => x(i - 1))\n      .attr('y', marginTop)\n      .attr('width', (d, i) => x(i) - x(i - 1))\n      .attr('height', height - marginTop - marginBottom)\n      .attr('fill', (d) => d);\n\n    tickValues = d3.range(-1, thresholds.length);\n    tickFormat = (i) => {\n      if (i === -1) return thresholdFormat(1);\n      else if (i === thresholds.length - 1) return;\n      else if (i === thresholds.length - 2)\n        return thresholdFormat(thresholds[i] + '+', i);\n      return thresholdFormat(thresholds[i], i);\n    };\n  }\n\n  // Ordinal\n  else {\n    svg\n      .select('.ramp')\n      .transition(t)\n      .attr('opacity', 0)\n      .attr('xlink:href', null);\n    if (!ordinalWeights) {\n      x = d3\n        .scaleBand()\n        .domain(color.domain())\n        .rangeRound([marginLeft, width - marginRight]);\n      svg\n        .selectAll('rect')\n        .data(color.domain())\n        .join('rect')\n        .attr('x', x)\n        .attr('y', marginTop)\n        .attr('width', Math.max(0, x.bandwidth() - 1))\n        .attr('height', height - marginTop - marginBottom)\n        .attr('fill', color);\n    } else {\n      const widthScale = d3\n        .scaleLinear()\n        .domain([0, ordinalWeights.reduce((a, b) => a + b)])\n        .rangeRound([0, width - marginLeft - marginRight]);\n\n      const xPos = ordinalWeights.map((w, i) =>\n        ordinalWeights\n          .slice(0, i)\n          .reduce((acc, w) => acc + widthScale(w), marginLeft)\n      );\n\n      x = d3.scaleOrdinal().domain(color.domain()).range(xPos);\n\n      svg\n        .select('.bars')\n        .selectAll('rect')\n        .data(color.domain())\n        .join((enter) =>\n          enter\n            .append('rect')\n            .attr('x', x)\n            .attr('width', (d, i) => widthScale(ordinalWeights[i]))\n        )\n        .attr('y', marginTop)\n        .attr('height', height - marginTop - marginBottom)\n        .attr('fill', color)\n        .transition(t)\n        .attr('x', x)\n        .attr('width', (d, i) => widthScale(ordinalWeights[i]))\n        .attr('opacity', 1);\n    }\n\n    tickAdjust = () => {};\n  }\n\n  svg\n    .select('.axis')\n    .attr('transform', `translate(0,${height - marginBottom})`)\n    .transition(t)\n    .attr('class', 'axis')\n    .call(\n      d3\n        .axisBottom(x)\n        .ticks(ticks, typeof tickFormat === 'string' ? tickFormat : undefined)\n        .tickFormat(typeof tickFormat === 'function' ? tickFormat : undefined)\n        .tickSize(tickSize)\n        .tickValues(tickValues)\n    )\n    .on('start', () => {\n      svg.call(tickAdjust).call((svg) => svg.select('.domain').remove());\n    })\n    .call((g) =>\n      g\n        .select('.axistext')\n        .attr('class', 'axistext')\n        .attr('x', marginLeft)\n        .attr('y', marginTop + marginBottom - height - 6)\n        .attr('fill', 'currentColor')\n        .attr('text-anchor', 'start')\n        .attr('font-weight', 'bold')\n        .text(title)\n    );\n\n  return svg.node();\n}\n\nfunction ramp(color, n = 256) {\n  // const canvas = document.createElement('canvas');\n  const canvas = d3.select('.color-scale').node();\n  const context = ((canvas.width = n), (canvas.height = 1), canvas).getContext(\n    '2d'\n  );\n  for (let i = 0; i < n; ++i) {\n    context.fillStyle = color(i / (n - 1));\n    context.fillRect(i, 0, 1, 1);\n  }\n  return canvas;\n}\n","import MapLegend from './maplegend';\n\nimport {\n  COLORS,\n  D3_TRANSITION_DURATION,\n  MAP_META,\n  MAP_TYPES,\n  MAP_OPTIONS,\n  MAP_VIEWS,\n  STATE_CODES,\n  STATE_NAMES,\n  STATE_POPULATIONS_MIL,\n  UNKNOWN_DISTRICT_KEY,\n  ZONE_COLORS,\n} from '../constants';\nimport {\n  capitalizeAll,\n  formatNumber,\n  getStatistic,\n} from '../utils/commonfunctions';\n\nimport * as d3 from 'd3';\nimport React, {useEffect, useMemo, useRef} from 'react';\nimport * as Icon from 'react-feather';\nimport {useTranslation} from 'react-i18next';\nimport useSWR from 'swr';\nimport * as topojson from 'topojson';\n\nconst [width, height] = [432, 488];\n\nconst colorInterpolator = {\n  confirmed: (t) => d3.interpolateReds(t * 0.85),\n  active: (t) => d3.interpolateBlues(t * 0.85),\n  recovered: (t) => d3.interpolateGreens(t * 0.85),\n  deceased: (t) => d3.interpolateGreys(t * 0.85),\n  tested: (t) => d3.interpolatePurples(t * 0.85),\n};\n\nconst getTotalStatistic = (data, statistic, normalizer = 1) => {\n  return getStatistic(data, 'total', statistic, normalizer);\n};\n\nfunction MapVisualizer({\n  currentMap,\n  data,\n  changeMap,\n  regionHighlighted,\n  setRegionHighlighted,\n  statistic,\n  isCountryLoaded,\n}) {\n  const {t} = useTranslation();\n  const svgRef = useRef(null);\n\n  const mapMeta = MAP_META[currentMap.code];\n\n  const {data: geoData} = useSWR(\n    mapMeta.geoDataFile,\n    async (file) => {\n      return await d3.json(file);\n    },\n    {revalidateOnFocus: false, suspense: true}\n  );\n\n  const statisticMax = useMemo(() => {\n    const stateCodes = Object.keys(data).filter(\n      (stateCode) =>\n        stateCode !== 'TT' && Object.keys(MAP_META).includes(stateCode)\n    );\n    return currentMap.view === MAP_VIEWS.STATES\n      ? d3.max(stateCodes, (stateCode) =>\n          getTotalStatistic(\n            data[stateCode],\n            statistic,\n            currentMap.option === MAP_OPTIONS.PER_MILLION\n              ? STATE_POPULATIONS_MIL[stateCode]\n              : 1\n          )\n        )\n      : d3.max(stateCodes, (stateCode) =>\n          data[stateCode]?.districts\n            ? d3.max(Object.values(data[stateCode].districts), (districtData) =>\n                getTotalStatistic(districtData, statistic)\n              )\n            : 0\n        );\n  }, [data, currentMap.option, currentMap.view, statistic]);\n\n  const statisticTotal = useMemo(() => {\n    return getTotalStatistic(\n      data[currentMap.code],\n      statistic,\n      currentMap.option === MAP_OPTIONS.PER_MILLION\n        ? STATE_POPULATIONS_MIL[currentMap.code]\n        : 1\n    );\n  }, [data, currentMap.code, currentMap.option, statistic]);\n\n  const mapScale = useMemo(() => {\n    if (currentMap.option === MAP_OPTIONS.ZONES) {\n      return d3.scaleOrdinal(\n        Object.keys(ZONE_COLORS),\n        Object.values(ZONE_COLORS)\n      );\n    } else if (currentMap.option === MAP_OPTIONS.HOTSPOTS) {\n      return d3\n        .scaleSqrt([0, Math.max(statisticMax, 1)], [0, 40])\n        .clamp(true)\n        .nice(3);\n    } else {\n      return d3\n        .scaleSequential(\n          [0, Math.max(1, statisticMax)],\n          colorInterpolator[statistic]\n        )\n        .clamp(true);\n    }\n  }, [currentMap.option, statistic, statisticMax]);\n\n  useEffect(() => {\n    const topology = topojson.feature(\n      geoData,\n      geoData.objects[mapMeta.graphObjectStates || mapMeta.graphObjectDistricts]\n    );\n\n    const svg = d3.select(svgRef.current);\n\n    const projection = d3.geoMercator().fitSize([width, height], topology);\n    const path = d3.geoPath(projection);\n\n    // Add id to each feature\n    let features =\n      currentMap.option !== MAP_OPTIONS.HOTSPOTS\n        ? currentMap.view === MAP_VIEWS.STATES\n          ? topojson.feature(\n              geoData,\n              geoData.objects[mapMeta.graphObjectStates]\n            ).features\n          : topojson.feature(\n              geoData,\n              geoData.objects[mapMeta.graphObjectDistricts]\n            ).features\n        : [\n            ...topojson.feature(\n              geoData,\n              geoData.objects[mapMeta.graphObjectStates]\n            ).features,\n            ...topojson.feature(\n              geoData,\n              geoData.objects[mapMeta.graphObjectDistricts]\n            ).features,\n          ];\n\n    features = features.map((f) => {\n      const district = f.properties.district;\n      const state = f.properties.st_nm;\n      const obj = Object.assign({}, f);\n      obj.id = `${currentMap.code}-${state}${district ? '-' + district : ''}`;\n      return obj;\n    });\n\n    const fillColor = (d) => {\n      const stateCode = STATE_CODES[d.properties.st_nm];\n      const district = d.properties.district;\n      const stateData = data[stateCode];\n      const districtData = stateData?.districts?.[district];\n      let n;\n      if (currentMap.option === MAP_OPTIONS.ZONES) {\n        n = districtData?.zone || 0;\n      } else {\n        if (district) n = getTotalStatistic(districtData, statistic);\n        else\n          n = getTotalStatistic(\n            stateData,\n            statistic,\n            currentMap.option === MAP_OPTIONS.PER_MILLION\n              ? STATE_POPULATIONS_MIL[stateCode]\n              : 1\n          );\n      }\n      const color = n === 0 ? '#ffffff00' : mapScale(n);\n      return color;\n    };\n\n    const strokeColor = (d) => {\n      return currentMap.option === MAP_OPTIONS.ZONES\n        ? '#343a40'\n        : COLORS[statistic];\n    };\n\n    /* Draw map */\n    const t = d3.transition().duration(D3_TRANSITION_DURATION);\n    let onceTouchedRegion = null;\n    const regionSelection = svg\n      .select('.regions')\n      .selectAll('path')\n      .data(\n        currentMap.option !== MAP_OPTIONS.HOTSPOTS ? features : [],\n        (d) => d.id\n      )\n      .join(\n        (enter) => {\n          const sel = enter\n            .append('path')\n            .attr('d', path)\n            .attr('stroke-width', 1.8)\n            .attr('stroke-opacity', 0)\n            .style('cursor', 'pointer')\n            .on('mouseenter', (d) => {\n              setRegionHighlighted({\n                stateCode: STATE_CODES[d.properties.st_nm],\n                districtName: d.properties.district,\n              });\n            })\n            .on('mouseleave', (d) => {\n              if (onceTouchedRegion === d) onceTouchedRegion = null;\n            })\n            .on('touchstart', (d) => {\n              if (onceTouchedRegion === d) onceTouchedRegion = null;\n              else onceTouchedRegion = d;\n            })\n            .on('click', (d) => {\n              d3.event.stopPropagation();\n              if (onceTouchedRegion || mapMeta.mapType === MAP_TYPES.STATE)\n                return;\n              // Disable pointer events till the new map is rendered\n              svg.attr('pointer-events', 'none');\n              svg\n                .select('.regions')\n                .selectAll('path')\n                .attr('pointer-events', 'none');\n              // Switch map\n              changeMap(STATE_CODES[d.properties.st_nm]);\n            })\n            .attr('fill', fillColor)\n            .attr('stroke', strokeColor);\n          sel.append('title');\n          return sel;\n        },\n        (update) =>\n          update.call((update) =>\n            update\n              .transition(t)\n              .attr('fill', fillColor)\n              .attr('stroke', strokeColor)\n          )\n      )\n      .attr('pointer-events', 'all');\n\n    regionSelection.select('title').text((d) => {\n      if (currentMap.option === MAP_OPTIONS.TOTAL) {\n        const state = d.properties.st_nm;\n        const stateCode = STATE_CODES[state];\n        const district = d.properties.district;\n\n        const stateData = data[stateCode];\n        const districtData = stateData?.districts?.[district];\n        let n;\n        if (district) n = getTotalStatistic(districtData, statistic);\n        else n = getTotalStatistic(stateData, statistic);\n        return (\n          formatNumber(100 * (n / (statisticTotal || 0.001))) +\n          '% from ' +\n          capitalizeAll(district ? district : state)\n        );\n      }\n    });\n\n    svg\n      .transition()\n      .duration(mapMeta.mapType === MAP_TYPES.STATE ? t.duration() / 2 : 0)\n      .on('end', () =>\n        svg.attr('class', currentMap.option === MAP_OPTIONS.ZONES ? 'zone' : '')\n      );\n\n    /* ----------BUBBLE MAP----------*/\n    let circlesData = [];\n    if (currentMap.option === MAP_OPTIONS.HOTSPOTS) {\n      circlesData = features\n        .map((d) => {\n          const stateCode = STATE_CODES[d.properties.st_nm];\n          const district = d.properties.district;\n\n          const stateData = data[stateCode];\n          const districtData = stateData?.districts?.[district];\n          if (district) d.value = getTotalStatistic(districtData, statistic);\n          else\n            d.value = getTotalStatistic(\n              stateData?.districts?.[UNKNOWN_DISTRICT_KEY],\n              statistic\n            );\n          return d;\n        })\n        .sort((a, b) => b.value - a.value);\n    }\n\n    svg\n      .select('.circles')\n      .selectAll('circle')\n      .data(circlesData, (d) => d.id)\n      .join((enter) =>\n        enter\n          .append('circle')\n          .attr('transform', (d) => `translate(${path.centroid(d)})`)\n          .attr('fill-opacity', 0.5)\n          .style('cursor', 'pointer')\n          .attr('pointer-events', 'all')\n          .on('mouseenter', (d) => {\n            setRegionHighlighted({\n              stateCode: STATE_CODES[d.properties.st_nm],\n              districtName: d.properties.district || UNKNOWN_DISTRICT_KEY,\n            });\n          })\n          .on('click', () => {\n            d3.event.stopPropagation();\n          })\n      )\n      .transition(t)\n      .attr('fill', COLORS[statistic] + '70')\n      .attr('stroke', COLORS[statistic] + '70')\n      .attr('r', (d) => mapScale(d.value));\n    /* ------------------------------*/\n\n    let meshStates = [];\n    if (mapMeta.mapType === MAP_TYPES.COUNTRY) {\n      meshStates = [\n        topojson.mesh(geoData, geoData.objects[mapMeta.graphObjectStates]),\n      ];\n      meshStates[0].id = mapMeta.graphObjectStates;\n    }\n    let meshDistricts = [];\n    if (currentMap.view === MAP_VIEWS.DISTRICTS) {\n      // Add id to mesh\n      meshDistricts = [\n        topojson.mesh(geoData, geoData.objects[mapMeta.graphObjectDistricts]),\n      ];\n      meshDistricts[0].id = mapMeta.graphObjectDistricts;\n    }\n\n    svg\n      .select(\n        currentMap.view === MAP_VIEWS.STATES\n          ? '.state-borders'\n          : '.district-borders'\n      )\n      .attr('fill', 'none')\n      .attr('stroke-width', function () {\n        return mapMeta.mapType === MAP_TYPES.COUNTRY &&\n          currentMap.view === MAP_VIEWS.DISTRICTS\n          ? 0\n          : 1.5;\n      })\n      .selectAll('path')\n      .data(\n        currentMap.view === MAP_VIEWS.STATES ? meshStates : meshDistricts,\n        (d) => d.id\n      )\n      .join((enter) => enter.append('path').attr('d', path))\n      .transition(t)\n      .attr('stroke', () => {\n        if (currentMap.option === MAP_OPTIONS.ZONES) {\n          return '#00000060';\n        } else {\n          return COLORS[statistic] + '30';\n        }\n      });\n\n    svg\n      .select(\n        currentMap.view === MAP_VIEWS.STATES\n          ? '.district-borders'\n          : '.state-borders'\n      )\n      .selectAll('path')\n      .data(\n        currentMap.view === MAP_VIEWS.STATES ? meshDistricts : meshStates,\n        (d) => d.id\n      )\n      .join((enter) =>\n        enter\n          .append('path')\n          .attr('d', path)\n          .attr('fill', 'none')\n          .attr('stroke-width', 1.5)\n      )\n      .transition(t)\n      .attr('stroke', '#343a4050');\n\n    // Reset on tapping outside map\n    svg.attr('pointer-events', 'auto').on('click', () => {\n      if (mapMeta.mapType !== MAP_TYPES.STATE) {\n        setRegionHighlighted({\n          stateCode: 'TT',\n          districtName: null,\n        });\n      }\n    });\n  }, [\n    geoData,\n    data,\n    mapMeta,\n    currentMap,\n    setRegionHighlighted,\n    changeMap,\n    isCountryLoaded,\n    mapScale,\n    statistic,\n    statisticTotal,\n  ]);\n\n  useEffect(() => {\n    const state = STATE_NAMES[regionHighlighted.stateCode];\n    const district = regionHighlighted.districtName;\n\n    const svg = d3.select(svgRef.current);\n    if (currentMap.option === MAP_OPTIONS.HOTSPOTS) {\n      svg\n        .select('.circles')\n        .selectAll('circle')\n        .attr('fill-opacity', (d) => {\n          const highlighted =\n            state === d.properties.st_nm &&\n            (!district ||\n              district === d.properties?.district ||\n              (district === UNKNOWN_DISTRICT_KEY && !d.properties.district));\n          return highlighted ? 1 : 0.5;\n        });\n    } else {\n      svg\n        .select('.regions')\n        .selectAll('path')\n        .each(function (d) {\n          const highlighted =\n            state === d.properties.st_nm &&\n            (currentMap.view === MAP_VIEWS.STATES ||\n              district === d.properties?.district);\n          if (highlighted) this.parentNode.appendChild(this);\n          d3.select(this).attr('stroke-opacity', highlighted ? 1 : 0);\n        });\n    }\n  }, [\n    geoData,\n    data,\n    currentMap.option,\n    currentMap.view,\n    regionHighlighted.stateCode,\n    regionHighlighted.districtName,\n    statistic,\n  ]);\n\n  return (\n    <React.Fragment>\n      <div className=\"svg-parent\">\n        <svg\n          id=\"chart\"\n          viewBox={`0 0 ${width} ${height}`}\n          preserveAspectRatio=\"xMidYMid meet\"\n          ref={svgRef}\n        >\n          <g className=\"regions\" />\n          <g className=\"state-borders\" />\n          {currentMap.view === MAP_VIEWS.DISTRICTS && (\n            <g className=\"district-borders\" />\n          )}\n          {currentMap.option === MAP_OPTIONS.HOTSPOTS && (\n            <g className=\"circles\" />\n          )}\n        </svg>\n        {mapMeta.mapType === MAP_TYPES.STATE &&\n          !!getTotalStatistic(\n            data[currentMap.code]?.districts?.[UNKNOWN_DISTRICT_KEY],\n            statistic\n          ) && (\n            <div className=\"disclaimer\">\n              <Icon.AlertCircle />\n              {t('District-wise {{statistic}} numbers need reconciliation', {\n                statistic: t(statistic),\n              })}\n            </div>\n          )}\n      </div>\n\n      {mapScale && (\n        <MapLegend\n          data={data}\n          mapScale={mapScale}\n          mapOption={currentMap.option}\n          statistic={statistic}\n        />\n      )}\n\n      <svg style={{position: 'absolute', height: 0}}>\n        <defs>\n          <filter id=\"balance-color\" colorInterpolationFilters=\"sRGB\">\n            <feColorMatrix\n              type=\"matrix\"\n              values=\"0.91372549  0           0            0  0.08627451\n                      0           0.91372549  0            0  0.08627451\n                      0           0           0.854901961  0  0.145098039\n                      0           0           0            1  0\"\n            />\n          </filter>\n        </defs>\n      </svg>\n    </React.Fragment>\n  );\n}\n\nexport default MapVisualizer;\n","import React from 'react';\nimport * as Icon from 'react-feather';\nimport ReactTooltip from 'react-tooltip';\n\nexport const testedToolTip = (\n  <span className=\"tooltip-tested\" onClick={(e) => e.stopPropagation()}>\n    <Icon.Info\n      data-for=\"tested\"\n      data-tip=\"Reporting total samples tested from ICMR data\"\n      data-event=\"touchstart mouseover\"\n      data-event-off=\"mouseleave\"\n    />\n    <ReactTooltip\n      id=\"tested\"\n      effect=\"solid\"\n      multiline={true}\n      scrollHide={true}\n      globalEventOff=\"click\"\n    />\n  </span>\n);\n","import MapVisualizerLoader from './loaders/mapvisualizer';\nimport MapVisualizer from './mapvisualizer';\nimport {testedToolTip} from './tooltips';\n\nimport {\n  MAP_META,\n  MAP_OPTIONS,\n  MAP_STATISTICS,\n  MAP_TYPES,\n  MAP_VIEWS,\n  STATE_NAMES,\n  STATE_POPULATIONS_MIL,\n  UNKNOWN_DISTRICT_KEY,\n} from '../constants';\nimport {\n  capitalize,\n  formatNumber,\n  formatDate,\n  formatLastUpdated,\n  getStatistic,\n} from '../utils/commonfunctions';\n\nimport {PinIcon} from '@primer/octicons-v2-react';\nimport classnames from 'classnames';\nimport equal from 'fast-deep-equal';\nimport produce from 'immer';\nimport React, {\n  useCallback,\n  useEffect,\n  useMemo,\n  useRef,\n  useState,\n  Suspense,\n} from 'react';\nimport ReactDOM from 'react-dom';\nimport * as Icon from 'react-feather';\nimport {useTranslation} from 'react-i18next';\nimport {useHistory} from 'react-router-dom';\nimport {useSprings, animated} from 'react-spring';\n\nfunction MapExplorer({\n  stateCode,\n  data,\n  regionHighlighted,\n  setRegionHighlighted,\n  anchor,\n  setAnchor,\n  mapStatistic,\n  setMapStatistic,\n  isCountryLoaded = true,\n}) {\n  const {t} = useTranslation();\n  const history = useHistory();\n\n  const mapExplorerRef = useRef();\n\n  const [currentMap, setCurrentMap] = useState({\n    code: stateCode,\n    view:\n      MAP_META[stateCode].mapType === MAP_TYPES.COUNTRY\n        ? MAP_VIEWS.STATES\n        : MAP_VIEWS.DISTRICTS,\n    option: MAP_OPTIONS.TOTAL,\n  });\n  const currentMapMeta = MAP_META[currentMap.code];\n\n  const currentMapData =\n    currentMapMeta.mapType === MAP_TYPES.COUNTRY\n      ? data\n      : {[currentMap.code]: data[currentMap.code]};\n\n  useEffect(() => {\n    if (regionHighlighted.districtName) {\n      if (\n        currentMap.code !== regionHighlighted.stateCode &&\n        !(\n          currentMapMeta.mapType === MAP_TYPES.COUNTRY &&\n          currentMap.view === MAP_VIEWS.DISTRICTS\n        )\n      ) {\n        const newMapMeta = MAP_META[regionHighlighted.stateCode];\n        if (!newMapMeta) {\n          return;\n        }\n        setCurrentMap({\n          code: regionHighlighted.stateCode,\n          view: MAP_VIEWS.DISTRICTS,\n          option:\n            currentMap.option === MAP_OPTIONS.PER_MILLION\n              ? MAP_OPTIONS.TOTAL\n              : currentMap.option,\n        });\n      }\n    } else if (isCountryLoaded && currentMapMeta.mapType === MAP_TYPES.STATE) {\n      setCurrentMap({\n        code: 'TT',\n        view:\n          currentMap.option === MAP_OPTIONS.ZONES\n            ? MAP_VIEWS.DISTRICTS\n            : MAP_VIEWS.STATES,\n        option: currentMap.option,\n      });\n    }\n  }, [\n    isCountryLoaded,\n    regionHighlighted.stateCode,\n    regionHighlighted.districtName,\n    currentMap.code,\n    currentMap.option,\n    currentMap.view,\n    currentMapMeta.mapType,\n  ]);\n\n  const switchMap = useCallback(\n    (stateCode) => {\n      const newMapMeta = MAP_META[stateCode];\n      if (!newMapMeta) {\n        return;\n      }\n      if (newMapMeta.mapType === MAP_TYPES.STATE) {\n        const districts = data[stateCode].districts;\n        const topDistrict = Object.keys(districts).sort(\n          (a, b) =>\n            getStatistic(districts[b], 'total', mapStatistic) -\n            getStatistic(districts[a], 'total', mapStatistic)\n        )[0];\n        ReactDOM.unstable_batchedUpdates(() => {\n          setRegionHighlighted({\n            stateCode: stateCode,\n            districtName: topDistrict,\n          });\n          setCurrentMap({\n            code: stateCode,\n            view: MAP_VIEWS.DISTRICTS,\n            option:\n              currentMap.option === MAP_OPTIONS.PER_MILLION\n                ? MAP_OPTIONS.TOTAL\n                : currentMap.option,\n          });\n        });\n      } else {\n        ReactDOM.unstable_batchedUpdates(() => {\n          setCurrentMap({\n            code: 'TT',\n            view:\n              currentMap.option === MAP_OPTIONS.ZONES\n                ? MAP_VIEWS.DISTRICTS\n                : MAP_VIEWS.STATES,\n            option: currentMap.option,\n          });\n          setRegionHighlighted({\n            stateCode: 'TT',\n            districtName: null,\n          });\n        });\n      }\n    },\n    [data, currentMap.option, mapStatistic, setRegionHighlighted]\n  );\n\n  const panelState = useMemo(() => {\n    const stateCode =\n      currentMap.view === MAP_VIEWS.STATES\n        ? regionHighlighted.stateCode\n        : currentMap.code;\n    const stateData = data[stateCode] || {};\n    return produce(stateData, (draft) => {\n      draft.state = STATE_NAMES[stateCode];\n    });\n  }, [data, regionHighlighted.stateCode, currentMap.view, currentMap.code]);\n\n  const hoveredRegion = useMemo(() => {\n    const hoveredData =\n      (regionHighlighted.districtName\n        ? data[regionHighlighted.stateCode]?.districts?.[\n            regionHighlighted.districtName\n          ]\n        : data[regionHighlighted.stateCode]) || {};\n    return produce(hoveredData, (draft) => {\n      draft.name =\n        regionHighlighted.districtName ||\n        STATE_NAMES[regionHighlighted.stateCode];\n      if (!regionHighlighted.districtName)\n        draft.population_millions =\n          STATE_POPULATIONS_MIL[regionHighlighted.stateCode];\n    });\n  }, [data, regionHighlighted.stateCode, regionHighlighted.districtName]);\n\n  const handleTabClick = (option) => {\n    switch (option) {\n      case MAP_OPTIONS.TOTAL:\n        setCurrentMap({\n          code: currentMap.code,\n          view:\n            currentMapMeta.mapType === MAP_TYPES.COUNTRY\n              ? MAP_VIEWS.STATES\n              : MAP_VIEWS.DISTRICTS,\n          option: MAP_OPTIONS.TOTAL,\n        });\n        if (currentMapMeta.mapType === MAP_TYPES.COUNTRY)\n          setRegionHighlighted({\n            stateCode: regionHighlighted.stateCode,\n            districtName: null,\n          });\n        return;\n      case MAP_OPTIONS.PER_MILLION:\n        if (currentMapMeta.mapType === MAP_TYPES.STATE) return;\n        setCurrentMap({\n          code: currentMap.code,\n          view: MAP_VIEWS.STATES,\n          option: MAP_OPTIONS.PER_MILLION,\n        });\n        setRegionHighlighted({\n          stateCode: regionHighlighted.stateCode,\n          districtName: null,\n        });\n        return;\n      case MAP_OPTIONS.HOTSPOTS:\n        if (currentMapMeta.mapType === MAP_TYPES.STATE) return;\n        setCurrentMap({\n          code: currentMap.code,\n          view: MAP_VIEWS.DISTRICTS,\n          option: MAP_OPTIONS.HOTSPOTS,\n        });\n        return;\n      case MAP_OPTIONS.ZONES:\n        setCurrentMap({\n          code: currentMap.code,\n          view: MAP_VIEWS.DISTRICTS,\n          option: MAP_OPTIONS.ZONES,\n        });\n        if (currentMapMeta.mapType === MAP_TYPES.COUNTRY)\n          setRegionHighlighted({\n            stateCode: 'TT',\n            districtName: null,\n          });\n        return;\n      default:\n        return;\n    }\n  };\n\n  const springs = useSprings(\n    MAP_STATISTICS.length,\n    MAP_STATISTICS.map((statistic) => ({\n      total: getStatistic(panelState, 'total', statistic),\n      delta: getStatistic(panelState, 'delta', statistic),\n      from: {\n        total: getStatistic(panelState, 'total', statistic),\n        delta: getStatistic(panelState, 'delta', statistic),\n      },\n      config: {\n        tension: 500,\n        clamp: true,\n      },\n    }))\n  );\n\n  return (\n    <div\n      className={classnames(\n        'MapExplorer',\n        {stickied: anchor === 'mapexplorer'},\n        {hidden: anchor && anchor !== 'mapexplorer'}\n      )}\n    >\n      {window.innerWidth > 769 && (\n        <div\n          className={classnames('anchor', {stickied: anchor === 'mapexplorer'})}\n          onClick={() => {\n            setAnchor(anchor === 'mapexplorer' ? null : 'mapexplorer');\n          }}\n        >\n          <PinIcon />\n        </div>\n      )}\n\n      <div className=\"header\">\n        <h1>\n          {currentMap.code === 'TT'\n            ? t('India')\n            : t(STATE_NAMES[currentMap.code])}{' '}\n          {t('Map')}\n        </h1>\n        <h6>\n          {t('{{action}} over a {{mapType}} for more details', {\n            action: t(window.innerWidth <= 769 ? 'Tap' : 'Hover'),\n            mapType: t(\n              currentMapMeta.mapType === MAP_TYPES.COUNTRY\n                ? 'state/UT'\n                : 'District'\n            ),\n          })}\n        </h6>\n      </div>\n\n      <div className=\"map-stats\">\n        {MAP_STATISTICS.map((statistic, index) => (\n          <div\n            key={statistic}\n            className={classnames('stats', statistic, {\n              focused: statistic === mapStatistic,\n            })}\n            onClick={() => setMapStatistic(statistic)}\n          >\n            <h5>{t(capitalize(statistic))}</h5>\n            <div className=\"stats-bottom\">\n              <animated.h1>\n                {springs[index].total.interpolate((total) =>\n                  formatNumber(Math.floor(total))\n                )}\n              </animated.h1>\n              {statistic !== 'tested' && statistic !== 'active' && (\n                <animated.h6>\n                  {springs[index].delta.interpolate((delta) =>\n                    delta > 0 ? `+${formatNumber(Math.floor(delta))}` : '\\u00A0'\n                  )}\n                </animated.h6>\n              )}\n              {statistic === 'tested' && (\n                <h6>\n                  {panelState?.total?.tested &&\n                    t('As of {{date}}', {\n                      date: formatDate(\n                        panelState.meta.tested['last_updated'],\n                        'dd MMM'\n                      ),\n                    })}\n                </h6>\n              )}\n            </div>\n            {statistic === 'tested' && panelState?.total?.tested && (\n              <a href={panelState.meta.tested.source} target=\"_noblank\">\n                <Icon.Link />\n              </a>\n            )}\n            {statistic === 'tested' &&\n              panelState.state === 'Total' &&\n              testedToolTip}\n          </div>\n        ))}\n      </div>\n\n      <div className=\"meta\">\n        {currentMapMeta.mapType === MAP_TYPES.STATE && (\n          <div\n            className=\"map-button\"\n            onClick={() => history.push(`state/${currentMap.code}`)}\n          >\n            {t('Visit state page')}\n            <Icon.ArrowRightCircle />\n          </div>\n        )}\n\n        {currentMapMeta.mapType !== MAP_TYPES.STATE &&\n          panelState?.meta?.['last_updated'] && (\n            <div className=\"last-update\">\n              <h6>{t('Last updated')}</h6>\n              <h3>\n                {`${formatLastUpdated(panelState.meta['last_updated'])} ${t(\n                  'ago'\n                )}`}\n              </h3>\n            </div>\n          )}\n\n        <h2\n          className={classnames(mapStatistic, {\n            [hoveredRegion?.zone]: currentMap.option === MAP_OPTIONS.ZONES,\n          })}\n        >\n          {t(hoveredRegion.name)}\n          {hoveredRegion.name === UNKNOWN_DISTRICT_KEY &&\n            ` (${t(STATE_NAMES[regionHighlighted.stateCode])})`}\n        </h2>\n\n        {currentMapMeta.mapType === MAP_TYPES.STATE && (\n          <div className=\"map-button\" onClick={() => switchMap('TT')}>\n            {t('Back')}\n          </div>\n        )}\n\n        {currentMap.option !== MAP_OPTIONS.ZONES &&\n          ((currentMap.view === MAP_VIEWS.DISTRICTS &&\n            regionHighlighted.districtName) ||\n            (currentMap.view === MAP_VIEWS.STATES &&\n              currentMap.option !== MAP_OPTIONS.TOTAL)) && (\n            <h1 className={classnames('district', mapStatistic)}>\n              {formatNumber(\n                getStatistic(\n                  hoveredRegion,\n                  'total',\n                  mapStatistic,\n                  currentMap.option === MAP_OPTIONS.PER_MILLION\n                    ? hoveredRegion.population_millions\n                    : 1\n                )\n              )}\n              <br />\n              <span>\n                {t(mapStatistic)}\n                {currentMap.option === MAP_OPTIONS.PER_MILLION &&\n                  ` ${t('per million')}`}\n              </span>\n            </h1>\n          )}\n      </div>\n\n      <div ref={mapExplorerRef}>\n        {mapStatistic && (\n          <Suspense\n            fallback={\n              <MapVisualizerLoader\n                className=\"map-loader\"\n                {...{\n                  width: mapExplorerRef.current?.clientWidth,\n                  statistic: mapStatistic,\n                }}\n              />\n            }\n          >\n            <MapVisualizer\n              currentMap={currentMap}\n              data={currentMapData}\n              changeMap={switchMap}\n              regionHighlighted={regionHighlighted}\n              setRegionHighlighted={setRegionHighlighted}\n              statistic={mapStatistic}\n              isCountryLoaded={isCountryLoaded}\n            />\n          </Suspense>\n        )}\n      </div>\n\n      <div className=\"tabs-map\">\n        {Object.values(MAP_OPTIONS).map((option) => (\n          <div\n            key={option}\n            className={classnames('tab', {\n              focused: currentMap.option === option,\n            })}\n            onClick={() => handleTabClick(option)}\n          >\n            <h4>\n              {t(option)}\n              {option === MAP_OPTIONS.PER_MILLION && <sup>&dagger;</sup>}\n            </h4>\n          </div>\n        ))}\n      </div>\n\n      <h6 className={classnames('footnote', 'table-fineprint')}>\n        &dagger; {`${t('Based on 2019 population projection by NCP')} (`}\n        <a\n          href=\"https://nhm.gov.in/New_Updates_2018/Report_Population_Projection_2019.pdf\"\n          target=\"_noblank\"\n          style={{color: '#6c757d'}}\n        >\n          {t('source')}\n        </a>\n        )\n      </h6>\n    </div>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (!equal(prevProps.regionHighlighted, currProps.regionHighlighted)) {\n    return false;\n  }\n  if (!equal(prevProps.mapStatistic, currProps.mapStatistic)) {\n    return false;\n  }\n  if (!equal(prevProps.anchor, currProps.anchor)) {\n    return false;\n  }\n  if (\n    !equal(\n      prevProps.data?.TT?.meta?.['last_updated'],\n      currProps.data?.TT?.meta?.['last_updated']\n    )\n  ) {\n    return false;\n  }\n  if (!equal(prevProps.data?.TT?.total, currProps.data?.TT?.total)) {\n    return false;\n  }\n  return true;\n};\n\nexport default React.memo(MapExplorer, isEqual);\n","import {\n  COLORS,\n  D3_TRANSITION_DURATION,\n  TIMESERIES_STATISTICS,\n} from '../constants';\nimport {useResizeObserver} from '../hooks/useresizeobserver';\nimport {\n  capitalize,\n  formatNumber,\n  formatDate,\n  getStatistic,\n  parseIndiaDate,\n} from '../utils/commonfunctions';\n\nimport classnames from 'classnames';\nimport * as d3 from 'd3';\nimport {interpolatePath} from 'd3-interpolate-path';\nimport {formatISO, subDays} from 'date-fns';\nimport equal from 'fast-deep-equal';\nimport React, {useCallback, useEffect, useRef, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\n\nfunction TimeSeries({timeseries, dates, chartType, isUniform, isLog}) {\n  const {t} = useTranslation();\n  const refs = useRef([]);\n\n  const wrapperRef = useRef();\n  const dimensions = useResizeObserver(wrapperRef);\n\n  const [highlightedDate, setHighlightedDate] = useState();\n\n  useEffect(() => {\n    setHighlightedDate(dates[dates.length - 1]);\n  }, [dates]);\n\n  useEffect(() => {\n    const T = dates.length;\n\n    const {width, height} =\n      dimensions || wrapperRef.current.getBoundingClientRect();\n\n    // Margins\n    const margin = {top: 15, right: 35, bottom: 25, left: 25};\n    const chartRight = width - margin.right;\n    const chartBottom = height - margin.bottom;\n\n    const yBufferTop = 1.2;\n    const yBufferBottom = 1.1;\n\n    const xScale = d3\n      .scaleTime()\n      .clamp(true)\n      .domain([parseIndiaDate(dates[0]), parseIndiaDate(dates[T - 1])])\n      .range([margin.left, chartRight]);\n\n    // Number of x-axis ticks\n    const numTicksX = width < 480 ? 4 : 7;\n\n    const xAxis = (g) =>\n      g.attr('class', 'x-axis').call(\n        d3\n          .axisBottom(xScale)\n          .ticks(numTicksX)\n          .tickFormat((date) => formatDate(date, 'dd MMM'))\n      );\n\n    const xAxis2 = (g, yScale) => {\n      g.attr('class', 'x-axis2')\n        .call(d3.axisBottom(xScale).tickValues([]).tickSize(0))\n        .select('.domain')\n        .style('transform', `translateY(${yScale(0)}px)`);\n\n      if (yScale(0) !== chartBottom) g.select('.domain').attr('opacity', 0.4);\n      else g.select('.domain').attr('opacity', 0);\n    };\n\n    const yAxis = (g, yScale) =>\n      g\n        .attr('class', 'y-axis')\n        .call(d3.axisRight(yScale).ticks(4, '0~s').tickPadding(4));\n\n    const uniformScaleMin = d3.min(dates, (date) =>\n      getStatistic(timeseries[date], chartType, 'active')\n    );\n\n    const uniformScaleMax = d3.max(dates, (date) =>\n      Math.max(\n        getStatistic(timeseries[date], chartType, 'confirmed'),\n        getStatistic(timeseries[date], chartType, 'recovered'),\n        getStatistic(timeseries[date], chartType, 'deceased')\n      )\n    );\n\n    const yScaleUniformLinear = d3\n      .scaleLinear()\n      .clamp(true)\n      .domain([uniformScaleMin, Math.max(1, yBufferTop * uniformScaleMax)])\n      .nice(4)\n      .range([chartBottom, margin.top]);\n\n    const yScaleUniformLog = d3\n      .scaleLog()\n      .clamp(true)\n      .domain([\n        Math.max(1, uniformScaleMin),\n        Math.max(10, yBufferTop * uniformScaleMax),\n      ])\n      .nice(4)\n      .range([chartBottom, margin.top]);\n\n    const generateYScale = (statistic) => {\n      if (isUniform && isLog && statistic !== 'tested') return yScaleUniformLog;\n\n      if (isUniform && statistic !== 'tested') return yScaleUniformLinear;\n\n      if (isLog)\n        return d3\n          .scaleLog()\n          .clamp(true)\n          .domain([\n            Math.max(\n              1,\n              d3.min(dates, (date) =>\n                getStatistic(timeseries[date], chartType, statistic)\n              )\n            ),\n            Math.max(\n              10,\n              yBufferTop *\n                d3.max(dates, (date) =>\n                  getStatistic(timeseries[date], chartType, statistic)\n                )\n            ),\n          ])\n          .nice(4)\n          .range([chartBottom, margin.top]);\n\n      return d3\n        .scaleLinear()\n        .clamp(true)\n        .domain([\n          yBufferBottom *\n            Math.min(\n              0,\n              d3.min(dates, (date) =>\n                getStatistic(timeseries[date], chartType, statistic)\n              )\n            ),\n          Math.max(\n            1,\n            yBufferTop *\n              d3.max(dates, (date) =>\n                getStatistic(timeseries[date], chartType, statistic)\n              )\n          ),\n        ])\n        .nice(4)\n        .range([chartBottom, margin.top]);\n    };\n\n    function mousemove() {\n      const xm = d3.mouse(this)[0];\n      const date = xScale.invert(xm);\n      const bisectDate = d3.bisector((date) => parseIndiaDate(date)).left;\n      const index = bisectDate(dates, date, 1);\n      setHighlightedDate(dates[index]);\n    }\n\n    function mouseout() {\n      setHighlightedDate(dates[T - 1]);\n    }\n\n    /* Begin drawing charts */\n    refs.current.forEach((ref, i) => {\n      const svg = d3.select(ref);\n      const t = svg.transition().duration(D3_TRANSITION_DURATION);\n\n      const statistic = TIMESERIES_STATISTICS[i];\n      const yScale = generateYScale(statistic);\n      const color = COLORS[statistic];\n\n      /* X axis */\n      svg\n        .select('.x-axis')\n        .style('transform', `translateY(${chartBottom}px)`)\n        .transition(t)\n        .call(xAxis);\n      svg.select('.x-axis2').transition(t).call(xAxis2, yScale);\n\n      /* Y axis */\n      svg\n        .select('.y-axis')\n        .style('transform', `translateX(${chartRight}px)`)\n        .transition(t)\n        .call(yAxis, yScale);\n\n      /* Path dots */\n      svg\n        .selectAll('circle')\n        .data(dates, (date) => date)\n        .join((enter) =>\n          enter\n            .append('circle')\n            .attr('fill', color)\n            .attr('stroke', color)\n            .attr('r', 2)\n            .attr('cy', chartBottom)\n            .attr('cx', (date) => xScale(parseIndiaDate(date)))\n        )\n        .transition(t)\n        .attr('cx', (date) => xScale(parseIndiaDate(date)))\n        .attr('cy', (date) =>\n          yScale(getStatistic(timeseries[date], chartType, statistic))\n        );\n\n      if (chartType === 'total') {\n        svg\n          .selectAll('.stem')\n          .transition(t)\n          .attr('y1', yScale(0))\n          .attr('y2', yScale(0))\n          .remove();\n\n        const line = d3\n          .line()\n          .curve(d3.curveMonotoneX)\n          .x((date) => xScale(parseIndiaDate(date)))\n          .y((date) =>\n            yScale(getStatistic(timeseries[date], chartType, statistic))\n          );\n\n        let pathLength;\n        svg\n          .selectAll('.trend')\n          .data(T ? [dates] : [])\n          .join(\n            (enter) =>\n              enter\n                .append('path')\n                .attr('class', 'trend')\n                .attr('fill', 'none')\n                .attr('stroke', color + '50')\n                .attr('stroke-width', 4)\n                .attr('d', line)\n                .attr('stroke-dasharray', function () {\n                  return (pathLength = this.getTotalLength());\n                })\n                .call((enter) =>\n                  enter\n                    .attr('stroke-dashoffset', pathLength)\n                    .transition(t)\n                    .attr('stroke-dashoffset', 0)\n                ),\n            (update) =>\n              update\n                .attr('stroke-dasharray', null)\n                .transition(t)\n                .attrTween('d', function (date) {\n                  const previous = d3.select(this).attr('d');\n                  const current = line(date);\n                  return interpolatePath(previous, current);\n                })\n          );\n      } else {\n        /* DAILY TRENDS */\n        svg.selectAll('.trend').remove();\n\n        svg\n          .selectAll('.stem')\n          .data(dates, (date) => date)\n          .join((enter) =>\n            enter\n              .append('line')\n              .attr('class', 'stem')\n              .style('stroke', color + '99')\n              .style('stroke-width', 4)\n              .attr('x1', (date) => xScale(parseIndiaDate(date)))\n              .attr('y1', chartBottom)\n              .attr('x2', (date) => xScale(parseIndiaDate(date)))\n              .attr('y2', chartBottom)\n          )\n          .transition(t)\n          .attr('x1', (date) => xScale(parseIndiaDate(date)))\n          .attr('y1', yScale(0))\n          .attr('x2', (date) => xScale(parseIndiaDate(date)))\n          .attr('y2', (date) =>\n            yScale(getStatistic(timeseries[date], chartType, statistic))\n          );\n      }\n\n      svg.selectAll('*').attr('pointer-events', 'none');\n      svg\n        .on('mousemove', mousemove)\n        .on('touchmove', mousemove)\n        .on('mouseout', mouseout)\n        .on('touchend', mouseout);\n    });\n  }, [chartType, dimensions, isUniform, isLog, timeseries, dates]);\n\n  useEffect(() => {\n    refs.current.forEach((ref) => {\n      const svg = d3.select(ref);\n      svg\n        .selectAll('circle')\n        .attr('r', (date) => (date === highlightedDate ? 4 : 2));\n    });\n  }, [highlightedDate]);\n\n  const getStatisticDelta = useCallback(\n    (statistic) => {\n      if (!highlightedDate) return;\n      const deltaToday = getStatistic(\n        timeseries?.[highlightedDate],\n        'delta',\n        statistic\n      );\n      if (chartType === 'total') return deltaToday;\n      const yesterday = formatISO(subDays(parseIndiaDate(highlightedDate), 1), {\n        representation: 'date',\n      });\n      const deltaYesterday = getStatistic(\n        timeseries?.[yesterday],\n        'delta',\n        statistic\n      );\n      return deltaToday - deltaYesterday;\n    },\n    [timeseries, highlightedDate, chartType]\n  );\n\n  return (\n    <React.Fragment>\n      <div className=\"TimeSeries\">\n        {TIMESERIES_STATISTICS.map((statistic, index) => {\n          const delta = getStatisticDelta(statistic);\n          return (\n            <div\n              key={statistic}\n              className={classnames('svg-parent', `is-${statistic}`)}\n              ref={wrapperRef}\n            >\n              {highlightedDate && (\n                <div className={classnames('stats', `is-${statistic}`)}>\n                  <h5 className=\"title\">{capitalize(t(statistic))}</h5>\n                  <h5 className=\"title\">\n                    {formatDate(highlightedDate, 'dd MMMM')}\n                  </h5>\n                  <div className=\"stats-bottom\">\n                    <h2>\n                      {formatNumber(\n                        getStatistic(\n                          timeseries?.[highlightedDate],\n                          chartType,\n                          statistic\n                        )\n                      )}\n                    </h2>\n                    <h6>{`${delta >= 0 ? '+' : ''}${formatNumber(delta)}`}</h6>\n                  </div>\n                </div>\n              )}\n              <svg\n                ref={(element) => {\n                  refs.current[index] = element;\n                }}\n                preserveAspectRatio=\"xMidYMid meet\"\n              >\n                <g className=\"x-axis\" />\n                <g className=\"x-axis2\" />\n                <g className=\"y-axis\" />\n              </svg>\n            </div>\n          );\n        })}\n      </div>\n    </React.Fragment>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (!equal(currProps.chartType, prevProps.chartType)) {\n    return false;\n  }\n  if (!equal(currProps.isUniform, prevProps.isUniform)) {\n    return false;\n  }\n  if (!equal(currProps.isLog, prevProps.isLog)) {\n    return false;\n  }\n  if (!equal(currProps.stateCode, prevProps.stateCode)) {\n    return false;\n  }\n  if (!equal(currProps.dates, prevProps.dates)) {\n    return false;\n  }\n  return true;\n};\n\nexport default React.memo(TimeSeries, isEqual);\n","import TimeSeries from './timeseries';\n\nimport {\n  STATE_NAMES,\n  TIMESERIES_CHART_TYPES,\n  TIMESERIES_OPTIONS,\n} from '../constants';\nimport {getIndiaYesterdayISO, parseIndiaDate} from '../utils/commonfunctions';\n\nimport 'intersection-observer';\n\nimport {PinIcon, IssueOpenedIcon} from '@primer/octicons-v2-react';\nimport classnames from 'classnames';\nimport {formatISO, sub} from 'date-fns';\nimport equal from 'fast-deep-equal';\nimport React, {useMemo, useRef, useState} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useIsVisible} from 'react-is-visible';\nimport {useLocalStorage} from 'react-use';\n\nfunction TimeSeriesExplorer({\n  timeseries,\n  date: timelineDate,\n  regionHighlighted,\n  setRegionHighlighted,\n  anchor,\n  setAnchor,\n  stateCodes,\n}) {\n  const {t} = useTranslation();\n  const [timeseriesOption, setTimeseriesOption] = useState(\n    TIMESERIES_OPTIONS.MONTH\n  );\n  const [chartType, setChartType] = useLocalStorage('chartType', 'total');\n  const [isUniform, setIsUniform] = useLocalStorage('isUniform', true);\n  const [isLog, setIsLog] = useLocalStorage('isLog', false);\n  const explorerElement = useRef();\n  const isVisible = useIsVisible(explorerElement, {once: true});\n\n  const dates = useMemo(() => {\n    const today = timelineDate || getIndiaYesterdayISO();\n    const pastDates = Object.keys(timeseries || {}).filter(\n      (date) => date <= today\n    );\n\n    if (timeseriesOption === TIMESERIES_OPTIONS.TWO_WEEKS) {\n      const cutOffDate = formatISO(sub(parseIndiaDate(today), {weeks: 2}), {\n        representation: 'date',\n      });\n      return pastDates.filter((date) => date >= cutOffDate);\n    } else if (timeseriesOption === TIMESERIES_OPTIONS.MONTH) {\n      const cutOffDate = formatISO(sub(parseIndiaDate(today), {months: 1}), {\n        representation: 'date',\n      });\n      return pastDates.filter((date) => date >= cutOffDate);\n    }\n    return pastDates;\n  }, [timeseries, timelineDate, timeseriesOption]);\n\n  const handleChange = ({target}) => {\n    setRegionHighlighted({\n      stateCode: target.value,\n      districtName: null,\n    });\n  };\n\n  return (\n    <div\n      className={classnames('TimeSeriesExplorer', {\n        stickied: anchor === 'timeseries',\n      })}\n      style={{display: anchor === 'mapexplorer' ? 'none' : ''}}\n      ref={explorerElement}\n    >\n      <div className=\"timeseries-header\">\n        <div\n          className={classnames('anchor', {\n            stickied: anchor === 'timeseries',\n          })}\n          onClick={() => {\n            setAnchor(anchor === 'timeseries' ? null : 'timeseries');\n          }}\n        >\n          <PinIcon />\n        </div>\n\n        <h1>{t('Spread Trends')}</h1>\n        <div className=\"tabs\">\n          {Object.entries(TIMESERIES_CHART_TYPES).map(([ctype, value]) => (\n            <div\n              className={`tab ${chartType === ctype ? 'focused' : ''}`}\n              key={ctype}\n              onClick={() => {\n                setChartType(ctype);\n              }}\n            >\n              <h4>{t(value)}</h4>\n            </div>\n          ))}\n        </div>\n\n        <div className=\"scale-modes\">\n          <label className=\"main\">{t('Scale Modes')}</label>\n          <div className=\"timeseries-mode\">\n            <label htmlFor=\"timeseries-mode\">{t('Uniform')}</label>\n            <input\n              id=\"timeseries-mode\"\n              type=\"checkbox\"\n              className=\"switch\"\n              checked={isUniform}\n              aria-label={t('Checked by default to scale uniformly.')}\n              onChange={() => {\n                setIsUniform(!isUniform);\n              }}\n            />\n          </div>\n          <div\n            className={`timeseries-logmode ${\n              chartType !== 'total' ? 'disabled' : ''\n            }`}\n          >\n            <label htmlFor=\"timeseries-logmode\">{t('Logarithmic')}</label>\n            <input\n              id=\"timeseries-logmode\"\n              type=\"checkbox\"\n              checked={chartType === 'total' && isLog}\n              className=\"switch\"\n              disabled={chartType !== 'total'}\n              onChange={() => {\n                setIsLog(!isLog);\n              }}\n            />\n          </div>\n        </div>\n\n        {stateCodes && (\n          <div className=\"trends-state-name\">\n            <select value={regionHighlighted.stateCode} onChange={handleChange}>\n              {stateCodes.map((stateCode) => {\n                return (\n                  <option value={stateCode} key={stateCode}>\n                    {stateCode === 'TT'\n                      ? t('All States')\n                      : t(STATE_NAMES[stateCode])}\n                  </option>\n                );\n              })}\n            </select>\n          </div>\n        )}\n      </div>\n\n      {isVisible && (\n        <TimeSeries\n          stateCode={regionHighlighted.stateCode}\n          {...{timeseries, dates, chartType, isUniform, isLog}}\n        />\n      )}\n\n      <div className=\"pills\">\n        {Object.values(TIMESERIES_OPTIONS).map((option) => (\n          <button\n            key={option}\n            type=\"button\"\n            className={classnames({selected: timeseriesOption === option})}\n            onClick={() => setTimeseriesOption(option)}\n          >\n            {t(option)}\n          </button>\n        ))}\n      </div>\n\n      <div className=\"alert\">\n        <IssueOpenedIcon size={24} />\n        <div className=\"alert-right\">\n          {t('Tested chart is independent of uniform scaling')}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (\n    !equal(\n      currProps.regionHighlighted.stateCode,\n      prevProps.regionHighlighted.stateCode\n    )\n  ) {\n    return false;\n  }\n  if (!equal(currProps.date, prevProps.date)) {\n    return false;\n  }\n  if (!equal(currProps.anchor, prevProps.anchor)) {\n    return false;\n  }\n  return true;\n};\n\nexport default React.memo(TimeSeriesExplorer, isEqual);\n","import {format} from 'date-fns';\nimport clamp from 'lodash/clamp';\nimport React, {useState} from 'react';\nimport {useSprings, useTransition, animated, config} from 'react-spring';\nimport {useMeasure, useKeyPressEvent} from 'react-use';\nimport {useDrag} from 'react-use-gesture';\n\nconst Timeline = ({setIsTimelineMode, setDate, dates}) => {\n  const [timelineElement, {width}] = useMeasure();\n  const [index, setIndex] = useState(0);\n\n  const [springs, set] = useSprings(\n    dates.length,\n    (i) => ({\n      x: (index - i) * (480 / 3) + 480 / 2 - 35,\n      color: i === 0 ? '#6c757d' : '#6c757d99',\n      opacity: i < 2 ? 1 : 0,\n    }),\n    config.stiff\n  );\n\n  const bind = useDrag(\n    ({down, delta: [xDelta], direction: [xDir], distance, cancel}) => {\n      const clampedIndex = getClampedIndex(xDir);\n      if (down && distance > 25) {\n        cancel(setIndex(clampedIndex));\n        setClampedDate(clampedIndex);\n      }\n\n      if (index === 0 && xDir < 0) {\n        hideTimeline();\n      }\n\n      setSprings({clampedIndex: index, xDir, down, xDelta});\n    }\n  );\n\n  const getClampedIndex = (direction) => {\n    return clamp(index + (direction > 0 ? 1 : -1), 0, dates.length - 1);\n  };\n\n  const setSprings = ({direction, clampedIndex, down, xDelta}) => {\n    set((i) => {\n      if (i < clampedIndex - 1) {\n        return {x: width, color: '#6c757d99', opacity: 0, display: 'none'};\n      } else if (i > clampedIndex + 1) {\n        return {x: -40, color: '#6c757d99', opacity: 0, display: 'none'};\n      }\n\n      let x = 0;\n      if (xDelta) {\n        x =\n          (clampedIndex - i) * (width / 3) +\n          width / 2 -\n          35 +\n          (down ? xDelta : 0);\n      } else {\n        x = (clampedIndex - i) * (width / 3) + width / 3 + 45;\n      }\n\n      if (i === clampedIndex) {\n        return {x, color: '#6c757d', display: 'block'};\n      }\n      return {x, color: '#6c757d99', opacity: 1, display: 'block'};\n    });\n  };\n\n  const handleKeyPress = (direction) => {\n    if (index < dates.length) {\n      const clampedIndex = getClampedIndex(direction);\n      setSprings({direction, clampedIndex});\n      setIndex(clampedIndex);\n      setClampedDate(clampedIndex);\n    }\n    if (index === 1 && direction === -1) {\n      hideTimeline();\n    }\n  };\n\n  useKeyPressEvent('ArrowLeft', () => {\n    handleKeyPress(1);\n  });\n\n  useKeyPressEvent('ArrowRight', () => {\n    handleKeyPress(-1);\n  });\n\n  useKeyPressEvent('Escape', () => {\n    setIsTimelineMode(false);\n    setDate('');\n  });\n\n  const hideTimeline = () => {\n    setTimeout(() => {\n      setIsTimelineMode(false);\n    }, 1000);\n  };\n\n  const getDate = (index) => {\n    if (index === 0) return 'Today';\n    return format(new Date(dates[index]), 'dd MMM');\n  };\n\n  const setClampedDate = (clampedIndex) => {\n    if (clampedIndex === 0) {\n      setDate('');\n    } else {\n      setDate(dates[clampedIndex]);\n    }\n  };\n\n  const timeline = {\n    '2020-03-25': 'Beginning of Lockdown Phase 1',\n    '2020-04-14': 'End of Lockdown Phase 1',\n    '2020-04-15': 'Beginning of Lockdown Phase 2',\n    '2020-05-03': 'End of Lockdown Phase 2',\n    '2020-04-04': 'Beginning of Lockdown Phase 3',\n    '2020-04-17': 'End of Lockdown Phase 3',\n    '2020-05-18': 'Beginning of Lockdown Phase 4',\n    '2020-05-31': 'End of Lockdown Phase 4',\n    '2020-06-01': 'Beginning of Lockdown Phase 5',\n  };\n\n  const transition = useTransition(\n    timeline.hasOwnProperty(dates[index]),\n    null,\n    {\n      from: {transform: 'translate3d(0, 20px, 0)', opacity: 0},\n      enter: {transform: 'translate3d(0, 0px, 0)', opacity: 1},\n      leave: {transform: 'translate3d(0, 20px, 0)', opacity: 0},\n    }\n  );\n\n  const handleClick = (clampedIndex) => {\n    if (clampedIndex > index) {\n      handleKeyPress(+1);\n    } else {\n      handleKeyPress(-1);\n    }\n  };\n\n  return (\n    <React.Fragment>\n      {transition.map(\n        ({item, key, props}) =>\n          item && (\n            <animated.h5 className=\"highlight\" key={key} style={props}>\n              {timeline[dates[index]]}\n            </animated.h5>\n          )\n      )}\n\n      <div className=\"Timeline\" ref={timelineElement} {...bind()}>\n        {springs\n          .filter(\n            ({opacity}, i) =>\n              i < dates.length &&\n              (i === index + 1 ||\n                i === index - 1 ||\n                i === index + 2 ||\n                i === index - 2 ||\n                i === index)\n          )\n          .map(({x, color, opacity, display}, i) => (\n            <animated.div\n              className=\"day\"\n              key={i}\n              style={{\n                transform: x.interpolate((x) => `translate3d(${x}px,0,0)`),\n                opacity,\n                display,\n              }}\n            >\n              {index < 2 && (\n                <animated.h5\n                  style={{color}}\n                  onClick={() => {\n                    handleClick(i);\n                  }}\n                >\n                  {getDate(i)}\n                </animated.h5>\n              )}\n              {index > 1 && index < dates.length && (\n                <animated.h5\n                  style={{color}}\n                  onClick={() => {\n                    handleClick(index + i - 2);\n                  }}\n                >\n                  {getDate(index + i - 2)}\n                </animated.h5>\n              )}\n            </animated.div>\n          ))}\n      </div>\n    </React.Fragment>\n  );\n};\n\nexport default React.memo(Timeline);\n","import {formatDistance, format} from 'date-fns';\nimport React, {useLayoutEffect} from 'react';\n\nconst newDate = new Date();\nlet currentDate = newDate;\n\nfunction Updates({updates}) {\n  useLayoutEffect(() => {\n    currentDate = newDate;\n  });\n\n  return (\n    <div className=\"updates\">\n      <div className=\"updates-header\">\n        <h2>{format(currentDate, 'd MMM')}</h2>\n      </div>\n\n      {updates\n        .slice(-5)\n        .reverse()\n        .map(function (activity, index) {\n          activity.update = activity.update.replace(/\\n/g, '<br/>');\n          const activityDate = new Date(activity.timestamp * 1000);\n          const addHeader = () => {\n            currentDate = activityDate;\n\n            return (\n              <React.Fragment>\n                {index === 0 ? (\n                  <div className=\"update\">\n                    <h4>No updates yet!</h4>\n                  </div>\n                ) : (\n                  ''\n                )}\n                <div className=\"updates-header\">\n                  <h2>{format(activityDate, 'd MMM')}</h2>\n                </div>\n              </React.Fragment>\n            );\n          };\n\n          return (\n            <React.Fragment key={index}>\n              {activityDate.getDate() !== currentDate.getDate()\n                ? addHeader()\n                : ' '}\n              <div key={index} className=\"update\">\n                <h5>\n                  {formatDistance(\n                    new Date(activity.timestamp * 1000),\n                    new Date()\n                  ) + ' ago'}\n                </h5>\n                <h4\n                  dangerouslySetInnerHTML={{\n                    __html: activity.update,\n                  }}\n                ></h4>\n              </div>\n            </React.Fragment>\n          );\n        })}\n    </div>\n  );\n}\n\nexport default Updates;\n","import Timeline from './timeline';\nimport Updates from './updates';\n\nimport {fetcher} from '../utils/commonfunctions';\n\nimport {parse, format} from 'date-fns';\nimport {utcToZonedTime} from 'date-fns-tz';\nimport React, {useMemo, useState, useEffect} from 'react';\nimport * as Icon from 'react-feather';\nimport {useSpring, animated, useTrail, config} from 'react-spring';\nimport {useLocalStorage} from 'react-use';\nimport useSWR from 'swr';\n\nconst Actions = ({setDate, dates}) => {\n  const [showUpdates, setShowUpdates] = useState(false);\n  const [newUpdate, setNewUpdate] = useLocalStorage('newUpdate', false);\n  const [lastViewedLog, setLastViewedLog] = useLocalStorage('lastViewedLog', 0);\n  const [isTimelineMode, setIsTimelineMode] = useState(false);\n\n  const {data: updates} = useSWR(\n    'https://api.covid19india.org/updatelog/log.json',\n    fetcher,\n    {\n      revalidateOnFocus: false,\n    }\n  );\n\n  useEffect(() => {\n    if (updates !== undefined) {\n      const lastTimestamp = updates.slice().reverse()[0].timestamp * 1000;\n      if (lastTimestamp !== lastViewedLog) {\n        setNewUpdate(true);\n        setLastViewedLog(lastTimestamp);\n      }\n    }\n  }, [lastViewedLog, updates, setLastViewedLog, setNewUpdate]);\n\n  return (\n    <React.Fragment>\n      {!updates && <div style={{minHeight: '5rem'}} />}\n\n      {updates && (\n        <ActionsPanel\n          {...{\n            lastViewedLog,\n            newUpdate,\n            isTimelineMode,\n            setIsTimelineMode,\n            showUpdates,\n            setDate,\n            dates,\n            setNewUpdate,\n            setShowUpdates,\n          }}\n        />\n      )}\n\n      {showUpdates && <Updates {...{updates}} />}\n    </React.Fragment>\n  );\n};\n\nconst isEqual = (prevProps, currProps) => {\n  return true;\n};\n\nexport default React.memo(Actions, isEqual);\n\nconst ActionsPanel = ({\n  lastViewedLog,\n  newUpdate,\n  isTimelineMode,\n  setIsTimelineMode,\n  showUpdates,\n  setDate,\n  dates,\n  setNewUpdate,\n  setShowUpdates,\n}) => {\n  const Bell = useMemo(\n    () => (\n      <Icon.Bell\n        onClick={() => {\n          setShowUpdates(!showUpdates);\n          setNewUpdate(false);\n        }}\n      />\n    ),\n    [setNewUpdate, setShowUpdates, showUpdates]\n  );\n\n  const BellOff = useMemo(\n    () => (\n      <Icon.BellOff\n        onClick={() => {\n          setShowUpdates(!showUpdates);\n        }}\n      />\n    ),\n    [setShowUpdates, showUpdates]\n  );\n\n  const TimelineIcon = useMemo(\n    () => (\n      <svg\n        xmlns=\"http://www.w3.org/2000/svg\"\n        viewBox=\"-.2 -.2 17 17\"\n        width=\"16\"\n        height=\"16\"\n      >\n        <path\n          fillRule=\"evenodd\"\n          d=\"M1.643 3.143L.427 1.927A.25.25 0 000 2.104V5.75c0 \n          .138.112.25.25.25h3.646a.25.25 0 00.177-.427L2.715 \n          4.215a6.5 6.5 0 11-1.18 4.458.75.75 0 10-1.493.154 \n          8.001 8.001 0 101.6-5.684zM7.75 4a.75.75 0 \n          01.75.75v2.992l2.028.812a.75.75 0 01-.557 \n          1.392l-2.5-1A.75.75 0 017 8.25v-3.5A.75.75 \n          0 017.75 4z\"\n        ></path>\n      </svg>\n    ),\n    []\n  );\n\n  const {transform, opacity} = useSpring({\n    opacity: isTimelineMode ? 1 : 0,\n    transform: `perspective(600px) rotateX(${isTimelineMode ? 180 : 0}deg)`,\n    config: {mass: 5, tension: 500, friction: 80},\n  });\n\n  const trail = useTrail(3, {\n    from: {transform: 'translate3d(0, 10px, 0)', opacity: 0},\n    to: {\n      transform: 'translate3d(0, 0px, 0)',\n      opacity: 1,\n    },\n    config: config.stiff,\n  });\n\n  const getTimeFromMilliseconds = (lastViewedLog) => {\n    return format(\n      utcToZonedTime(parse(lastViewedLog, 'T', new Date()), 'Asia/Kolkata'),\n      'dd MMM, p'\n    );\n  };\n\n  return (\n    <React.Fragment>\n      <animated.div\n        className=\"actions\"\n        style={{\n          opacity: opacity.interpolate((o) => 1 - o),\n          transform,\n          pointerEvents: isTimelineMode ? 'none' : '',\n        }}\n      >\n        <animated.h5 style={trail[0]}>{`${getTimeFromMilliseconds(\n          lastViewedLog\n        )} IST`}</animated.h5>\n\n        {!showUpdates && (\n          <animated.div className=\"bell-icon\" style={trail[1]}>\n            {Bell}\n            {newUpdate && <div className=\"indicator\"></div>}\n          </animated.div>\n        )}\n\n        {showUpdates && BellOff}\n        <animated.div\n          className=\"timeline-icon\"\n          onClick={() => {\n            setIsTimelineMode(true);\n            if (showUpdates) setShowUpdates(!showUpdates);\n          }}\n          style={trail[2]}\n        >\n          {TimelineIcon}\n        </animated.div>\n      </animated.div>\n\n      <animated.div\n        className=\"actions timeline\"\n        style={{\n          opacity,\n          transform: transform.interpolate((t) => `${t} rotateX(180deg)`),\n          pointerEvents: !isTimelineMode ? 'none' : '',\n        }}\n      >\n        {isTimelineMode && (\n          <Timeline {...{setIsTimelineMode, setDate, dates}} />\n        )}\n      </animated.div>\n    </React.Fragment>\n  );\n};\n","import {\n  STATE_CODES_ARRAY,\n  STATE_CODES,\n  STATE_NAMES,\n  ESSENTIALS_CATEGORIES,\n} from '../constants';\nimport {capitalize} from '../utils/commonfunctions';\n\nimport Bloodhound from 'corejs-typeahead';\nimport produce from 'immer';\nimport React, {useState, useCallback, useRef} from 'react';\nimport * as Icon from 'react-feather';\nimport {useTranslation} from 'react-i18next';\nimport {Link} from 'react-router-dom';\nimport {useTrail, animated, config} from 'react-spring';\nimport {useDebounce} from 'react-use';\n\nconst engine = new Bloodhound({\n  initialize: true,\n  local: STATE_CODES_ARRAY,\n  queryTokenizer: Bloodhound.tokenizers.whitespace,\n  datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),\n});\n\nconst districtEngine = new Bloodhound({\n  initialize: true,\n  limit: 5,\n  queryTokenizer: Bloodhound.tokenizers.whitespace,\n  datumTokenizer: Bloodhound.tokenizers.obj.whitespace('district'),\n  indexRemote: true,\n  remote: {\n    url: 'https://api.covid19india.org/state_district_wise.json',\n    transform: function (response) {\n      const districts = [];\n      Object.keys(response).map((stateName) => {\n        const districtData = response[stateName].districtData;\n        Object.keys(districtData).map((districtName) => {\n          return districts.push({district: districtName, state: stateName});\n        });\n        return null;\n      });\n      return districts;\n    },\n  },\n});\n\nconst essentialsEngine = new Bloodhound({\n  initialize: true,\n  limit: 5,\n  queryTokenizer: Bloodhound.tokenizers.whitespace,\n  datumTokenizer: Bloodhound.tokenizers.obj.whitespace(\n    'category',\n    'city',\n    'contact',\n    'descriptionandorserviceprovided',\n    'nameoftheorganisation',\n    'state'\n  ),\n  indexRemote: true,\n  remote: {\n    url: 'https://api.covid19india.org/resources/resources.json',\n    transform: function (response) {\n      return response.resources;\n    },\n  },\n});\n\n/* let focused = false;\nconst suggestions = [\n  'Karnataka',\n  'West Bengal',\n  'Alappuzha',\n  'Senior citizen support bangalore',\n  'Community Kitchen in Kerala',\n  'Groceries Chennai',\n];*/\n\nconst essentialSuggestions = [\n  'Testing Pune',\n  'Delhi Shelter',\n  'Community Kitchen in Kerala',\n  'Groceries Chennai',\n  'Senior citizen support bangalore',\n];\nconst locationSuggestions = [\n  'Mumbai',\n  'Karnataka',\n  'Chennai',\n  'Alappuzha',\n  'Ganjam',\n];\n\nfunction Search() {\n  const [searchValue, setSearchValue] = useState('');\n  const [expand, setExpand] = useState(false);\n  const [results, setResults] = useState([]);\n  const searchInput = useRef(null);\n  const {t} = useTranslation();\n\n  const handleSearch = useCallback((searchInput) => {\n    const results = [];\n\n    const sync = (datums) => {\n      datums.map((result, index) => {\n        const stateObj = {\n          name: result.name,\n          type: 'state',\n          route: result.code,\n        };\n        results.push(stateObj);\n        return null;\n      });\n    };\n\n    const districtSync = (datums) => {\n      datums.slice(0, 3).map((result, index) => {\n        const districtObj = {\n          name: result.district,\n          type: 'district',\n          route: STATE_CODES[result.state],\n        };\n        results.push(districtObj);\n        return null;\n      });\n    };\n\n    const essentialsSync = (datums) => {\n      datums.slice(0, 5).map((result, index) => {\n        const essentialsObj = {\n          name: result.nameoftheorganisation,\n          type: 'essentials',\n          category: result.category,\n          website: result.contact,\n          description: result.descriptionandorserviceprovided,\n          city: result.city,\n          state: result.state,\n          contact: result.phonenumber,\n        };\n        results.push(essentialsObj);\n        return null;\n      });\n      setResults([...results]);\n    };\n\n    const essentialsAsync = (datums) => {\n      // to handle async remote call on initial launch\n      essentialsEngine.search(searchInput, essentialsSync);\n    };\n\n    engine.search(searchInput, sync);\n    districtEngine.search(searchInput, districtSync);\n    essentialsEngine.search(searchInput, essentialsSync, essentialsAsync);\n  }, []);\n\n  useDebounce(\n    () => {\n      if (searchValue) {\n        handleSearch(searchValue);\n      } else {\n        setResults(\n          produce(results, (draftResults) => {\n            draftResults.splice(0);\n          })\n        );\n      }\n    },\n    100,\n    [searchValue]\n  );\n\n  function setNativeValue(element, value) {\n    const valueSetter = Object.getOwnPropertyDescriptor(element, 'value').set;\n    const prototype = Object.getPrototypeOf(element);\n    const prototypeValueSetter = Object.getOwnPropertyDescriptor(\n      prototype,\n      'value'\n    ).set;\n\n    if (valueSetter && valueSetter !== prototypeValueSetter) {\n      prototypeValueSetter.call(element, value);\n    } else {\n      valueSetter.call(element, value);\n    }\n  }\n\n  /* function fillPlaceholder(target, index, cursorPosition, callback) {\n    if (focused) {\n      target.textContent = '';\n      return true;\n    }\n    const text = t(suggestions[index]);\n    const placeholder = target.textContent;\n    target.classList.remove('disappear');\n    target.textContent = placeholder + text[cursorPosition];\n    if (cursorPosition < text.length - 1) {\n      setTimeout(function () {\n        fillPlaceholder(target, index, cursorPosition + 1, callback);\n      }, 200);\n      return true;\n    }\n    callback();\n  }\n\n  function clearPlaceholder(target, callback) {\n    const placeholder = target.textContent;\n    target.classList.add('disappear');\n    if (placeholder.length > 0) {\n      setTimeout(function () {\n        target.textContent = '';\n        clearPlaceholder(target, callback);\n      }, 1000);\n      return true;\n    }\n    callback();\n  }\n\n  function loopThroughSuggestions(target, index) {\n    if (focused) {\n      target.textContent = '';\n      return true;\n    }\n    fillPlaceholder(target, index, 0, function () {\n      setTimeout(function () {\n        clearPlaceholder(target, function () {\n          loopThroughSuggestions(target, (index + 1) % suggestions.length);\n        });\n      }, 2000);\n    });\n  }\n\n  const targetInput = document.getElementById('search-placeholder');\n  if (targetInput) loopThroughSuggestions(targetInput, 0);*/\n\n  const [trail, set] = useTrail(3, () => ({\n    transform: 'translate3d(0, 10px, 0)',\n    opacity: 0,\n    config: config.stiff,\n  }));\n\n  set({transform: 'translate3d(0, 0px, 0)', opacity: 1});\n\n  return (\n    <div className=\"Search\">\n      <animated.label style={trail[0]}>\n        {t('Search your city, resources, etc')}\n      </animated.label>\n      <animated.div className=\"line\" style={trail[1]}></animated.div>\n\n      <animated.div className=\"search-input-wrapper\" style={trail[2]}>\n        <input\n          type=\"text\"\n          value={searchValue}\n          ref={searchInput}\n          onFocus={(event) => {\n            setExpand(true);\n          }}\n          onBlur={() => {\n            setExpand(false);\n          }}\n          onChange={(event) => {\n            setSearchValue(event.target.value);\n          }}\n        />\n        <span id=\"search-placeholder\" className=\"search-placeholder\"></span>\n\n        <div className={`search-button`}>\n          <Icon.Search />\n        </div>\n\n        {searchValue.length > 0 && (\n          <div\n            className={`close-button`}\n            onClick={() => {\n              setSearchValue('');\n              setResults([]);\n            }}\n          >\n            <Icon.X />\n          </div>\n        )}\n      </animated.div>\n\n      {results.length > 0 && (\n        <div className=\"results\">\n          {results.map((result, index) => {\n            if (result.type === 'state' || result.type === 'district') {\n              return (\n                <Link key={index} to={`state/${result.route}`}>\n                  <div className=\"result\">\n                    <div className=\"result-left\">\n                      <div className=\"result-name\">\n                        {`${result.name}`}\n                        {result.type === 'district' &&\n                          `, ${STATE_NAMES[result.route]}`}\n                      </div>\n                    </div>\n                    <div className=\"result-type\">\n                      <span>{[result.route]}</span>\n                      <Icon.ArrowRightCircle size={14} />\n                    </div>\n                  </div>\n                </Link>\n              );\n            } else {\n              return (\n                <a\n                  key={index}\n                  href={result.website || null}\n                  target=\"_noblank\"\n                  className=\"essential-result\"\n                >\n                  <div className=\"result-top\">\n                    <div className=\"result-top-left\">\n                      <div className=\"result-name\">{result.name}</div>\n                      <div className=\"result-location\">\n                        {result.city && `${result.city}, `}\n                        {result.state}\n                      </div>\n                    </div>\n                    <div className=\"result-category\">\n                      <div>\n                        {capitalize(ESSENTIALS_CATEGORIES[result.category])}\n                      </div>\n                      {result.website && <Icon.ExternalLink />}\n                    </div>\n                  </div>\n                  <div className=\"result-description\">{result.description}</div>\n                  <div className=\"result-contacts\">\n                    {result.contact.split('\\n').map((contact) => (\n                      <div key={contact} className=\"result-contact\">\n                        <Icon.Phone />\n                        <a href={`tel:${contact}`}>{contact}</a>\n                      </div>\n                    ))}\n                  </div>\n                </a>\n              );\n            }\n          })}\n        </div>\n      )}\n\n      {expand && (\n        <React.Fragment>\n          <p\n            className=\"feature\"\n            onMouseDown={(event) => {\n              event.preventDefault();\n              setNativeValue(searchInput.current, 'Cyclone Amphan');\n              searchInput.current.dispatchEvent(\n                new Event('input', {bubbles: true})\n              );\n            }}\n          >\n            To those who are in states affected by Cyclone Amphan or have\n            family/friends there, click here to view helplines for assistance.\n          </p>\n          <div className=\"expanded\">\n            <div className=\"expanded-left\">\n              <h3>{t('Essentials')}</h3>\n              <div className=\"suggestions\">\n                {essentialSuggestions.map((suggestion, index) => (\n                  <div className=\"suggestion\" key={index}>\n                    <div>-</div>\n                    <h4\n                      onMouseDown={(event) => {\n                        event.preventDefault();\n                        setNativeValue(searchInput.current, suggestion);\n                        searchInput.current.dispatchEvent(\n                          new Event('input', {bubbles: true})\n                        );\n                      }}\n                    >\n                      {t(suggestion)}\n                    </h4>\n                  </div>\n                ))}\n              </div>\n            </div>\n            <div className=\"expanded-right\">\n              <h3>{t('Locations')}</h3>\n              <div className=\"suggestions\">\n                {locationSuggestions.map((suggestion, index) => (\n                  <div className=\"suggestion\" key={index}>\n                    <div>-</div>\n                    <h4\n                      onMouseDown={(event) => {\n                        event.preventDefault();\n                        setNativeValue(searchInput.current, suggestion);\n                        searchInput.current.dispatchEvent(\n                          new Event('input', {bubbles: true})\n                        );\n                      }}\n                    >\n                      {t(suggestion)}\n                    </h4>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </div>\n        </React.Fragment>\n      )}\n    </div>\n  );\n}\n\nconst isEqual = () => {\n  return true;\n};\n\nexport default React.memo(Search, isEqual);\n","import {PRIMARY_STATISTICS, STATE_NAMES} from '../constants';\nimport {\n  abbreviate,\n  capitalize,\n  formatLastUpdated,\n  formatNumber,\n  getStatistic,\n} from '../utils/commonfunctions';\n\nimport Tooltip from '@primer/components/lib/Tooltip';\nimport {\n  InfoIcon,\n  TriangleUpIcon,\n  TriangleDownIcon,\n} from '@primer/octicons-v2-react';\nimport classnames from 'classnames';\nimport equal from 'fast-deep-equal';\nimport produce from 'immer';\nimport React, {useState, useCallback, useMemo} from 'react';\nimport * as Icon from 'react-feather';\nimport {useTranslation} from 'react-i18next';\nimport {useHistory} from 'react-router-dom';\nimport {useSpring, animated, config} from 'react-spring';\nimport {createBreakpoint, useLocalStorage} from 'react-use';\n\nconst useBreakpoint = createBreakpoint({L: 768, S: 350});\n\nfunction PureCell({statistic, data}) {\n  const total = getStatistic(data, 'total', statistic);\n  const delta = getStatistic(data, 'delta', statistic);\n\n  const spring = useSpring(\n    {\n      total: total,\n      delta: delta,\n      from: {\n        total: total,\n        delta: delta,\n      },\n    },\n    config.gentle\n  );\n\n  return (\n    <td>\n      {statistic !== 'active' && (\n        <animated.span className={classnames('delta', `is-${statistic}`)}>\n          {spring.delta.interpolate((delta) =>\n            delta > 0 ? '\\u2191' + formatNumber(Math.floor(delta)) : ''\n          )}\n        </animated.span>\n      )}\n      <animated.span className=\"total\">\n        {spring.total.interpolate((total) => formatNumber(Math.floor(total)))}\n      </animated.span>\n    </td>\n  );\n}\n\nconst isCellEqual = (prevProps, currProps) => {\n  if (!equal(prevProps.data.total, currProps.data.total)) {\n    return false;\n  }\n  if (!equal(prevProps.data.delta, currProps.data.delta)) {\n    return false;\n  }\n  return true;\n};\n\nconst Cell = React.memo(PureCell, isCellEqual);\n\nfunction DistrictHeaderCell({handleSortClick, statistic, sortData}) {\n  const breakpoint = useBreakpoint();\n  const {t} = useTranslation();\n\n  return (\n    <td onClick={() => handleSortClick(statistic)}>\n      <div className=\"heading-content\">\n        <abbr\n          className={classnames({[`is-${statistic}`]: breakpoint === 'S'})}\n          title={capitalize(statistic)}\n        >\n          {breakpoint === 'S'\n            ? capitalize(statistic.slice(0, 1))\n            : breakpoint === 'L'\n            ? capitalize(abbreviate(statistic))\n            : capitalize(t(statistic))}\n        </abbr>\n        {sortData.sortColumn === statistic && (\n          <div>\n            {sortData.isAscending && <TriangleUpIcon />}\n            {!sortData.isAscending && <TriangleDownIcon />}\n            <div />\n          </div>\n        )}\n      </div>\n    </td>\n  );\n}\n\nfunction PureDistrictRow({\n  stateCode,\n  districtName,\n  data,\n  regionHighlighted,\n  setRegionHighlighted,\n}) {\n  const {t} = useTranslation();\n\n  const highlightDistrict = useCallback(() => {\n    if (regionHighlighted.districtName !== districtName) {\n      setRegionHighlighted(\n        produce(regionHighlighted, (draftRegionHighlighted) => {\n          draftRegionHighlighted.stateCode = stateCode;\n          draftRegionHighlighted.districtName = districtName;\n        })\n      );\n    }\n  }, [regionHighlighted, districtName, setRegionHighlighted, stateCode]);\n\n  return (\n    <tr\n      className={classnames('district', {\n        'is-highlighted': regionHighlighted?.districtName === districtName,\n      })}\n      onMouseEnter={highlightDistrict}\n    >\n      <td>\n        <div className=\"title-chevron\">\n          <span className=\"title-icon\">\n            {t(districtName)}\n            {data?.meta?.notes && (\n              <Tooltip\n                className=\"tooltip\"\n                aria-label={data.meta.notes}\n                wrap={true}\n                direction={'e'}\n                noDelay={true}\n              >\n                <Icon.Info />\n              </Tooltip>\n            )}\n          </span>\n        </div>\n      </td>\n\n      {PRIMARY_STATISTICS.map((statistic) => (\n        <Cell key={statistic} {...{statistic}} data={data} />\n      ))}\n    </tr>\n  );\n}\n\nconst isDistrictRowEqual = (prevProps, currProps) => {\n  if (!equal(prevProps.data?.total, currProps.data?.total)) {\n    return false;\n  } else if (!equal(prevProps.data?.delta, currProps.data?.delta)) {\n    return false;\n  } else if (\n    !equal(prevProps.data?.['last_updated'], currProps.data?.['last_updated'])\n  ) {\n    return false;\n  } else if (\n    !equal(\n      prevProps.regionHighlighted.districtName,\n      currProps.regionHighlighted.districtName\n    ) &&\n    (equal(prevProps.regionHighlighted.districtName, prevProps.districtName) ||\n      equal(currProps.regionHighlighted.districtName, currProps.districtName))\n  ) {\n    return false;\n  }\n  return true;\n};\nconst DistrictRow = React.memo(PureDistrictRow, isDistrictRowEqual);\n\nfunction Row({stateCode, data, regionHighlighted, setRegionHighlighted}) {\n  const [showDistricts, setShowDistricts] = useState(false);\n  const [sortData, setSortData] = useLocalStorage('districtSortData', {\n    sortColumn: 'confirmed',\n    isAscending: false,\n  });\n\n  const history = useHistory();\n  const {t} = useTranslation();\n\n  const Chevron = useMemo(\n    () => (\n      <span\n        className={classnames(\n          'dropdown',\n          {rotateRightDown: showDistricts},\n          {rotateDownRight: !showDistricts}\n        )}\n      >\n        <Icon.ChevronDown />\n      </span>\n    ),\n    [showDistricts]\n  );\n\n  const handleSortClick = useCallback(\n    (statistic) => {\n      setSortData(\n        produce(sortData, (draftSortData) => {\n          draftSortData.isAscending = !sortData.isAscending;\n          draftSortData.sortColumn = statistic;\n        })\n      );\n    },\n    [sortData, setSortData]\n  );\n\n  const sortingFunction = useCallback(\n    (districtNameA, districtNameB) => {\n      if (sortData.sortColumn !== 'districtName') {\n        return sortData.isAscending\n          ? getStatistic(\n              data.districts[districtNameA],\n              'total',\n              sortData.sortColumn\n            ) -\n              getStatistic(\n                data.districts[districtNameB],\n                'total',\n                sortData.sortColumn\n              )\n          : getStatistic(\n              data.districts[districtNameB],\n              'total',\n              sortData.sortColumn\n            ) -\n              getStatistic(\n                data.districts[districtNameA],\n                'total',\n                sortData.sortColumn\n              );\n      } else {\n        return sortData.isAscending\n          ? districtNameA.localeCompare(districtNameB)\n          : districtNameB.localeCompare(districtNameA);\n      }\n    },\n    [sortData, data]\n  );\n\n  const highlightState = useCallback(() => {\n    if (regionHighlighted.stateCode !== stateCode) {\n      setRegionHighlighted(\n        produce(regionHighlighted, (draftRegionHighlighted) => {\n          draftRegionHighlighted.stateCode = stateCode;\n          draftRegionHighlighted.districtName = null;\n        })\n      );\n    }\n  }, [regionHighlighted, setRegionHighlighted, stateCode]);\n\n  const _setShowDistrict = useCallback(() => {\n    if (data.districts) {\n      setShowDistricts(!showDistricts);\n    }\n  }, [showDistricts, data]);\n\n  return (\n    <React.Fragment>\n      <tr\n        className={classnames(\n          'state',\n          {'is-total': stateCode === 'TT'},\n          {'is-highlighted': regionHighlighted?.stateCode === stateCode}\n        )}\n        onMouseEnter={highlightState}\n        onClick={_setShowDistrict}\n      >\n        <td>\n          <div className=\"title-chevron\">\n            {stateCode !== 'TT' && Chevron}\n            <span className=\"title-icon\">\n              {t(STATE_NAMES[stateCode])}\n\n              {data?.meta?.notes && (\n                <Tooltip\n                  className=\"tooltip\"\n                  aria-label={data.meta.notes}\n                  wrap={true}\n                  direction={'e'}\n                  noDelay={true}\n                >\n                  <InfoIcon size={'small'} />\n                </Tooltip>\n              )}\n            </span>\n          </div>\n        </td>\n\n        {PRIMARY_STATISTICS.map((statistic) => (\n          <Cell key={statistic} {...{data, statistic}} />\n        ))}\n      </tr>\n\n      {showDistricts && (\n        <React.Fragment>\n          <tr className=\"is-spacer\">\n            <td colSpan={5}>\n              <p />\n            </td>\n          </tr>\n\n          <tr className={'state-last-update'}>\n            <td colSpan={4} style={{paddingBottom: 0}}>\n              <p className=\"spacer\"></p>\n              {data?.meta?.['last_updated'] && (\n                <p>\n                  {`Last updated ${formatLastUpdated(\n                    data.meta.last_updated\n                  )} ${t('ago')}`}\n                </p>\n              )}\n              {data.districts['Unknown'] && (\n                <div className=\"disclaimer\">\n                  <Icon.AlertCircle />\n                  {t('District-wise numbers are under reconciliation')}\n                </div>\n              )}\n            </td>\n            <td\n              align=\"center\"\n              className=\"state-page-link\"\n              colSpan={1}\n              style={{width: '1.5rem'}}\n              onClick={() => {\n                history.push(`state/${stateCode}`);\n              }}\n            >\n              {t('See more details on {{state}}', {\n                state: t(STATE_NAMES[stateCode]),\n              })}\n            </td>\n          </tr>\n\n          <tr className={classnames('district-heading')}>\n            <td onClick={() => handleSortClick('districtName')}>\n              <div className=\"heading-content\">\n                <abbr title=\"District\">{t('District')}</abbr>\n                {sortData.sortColumn === 'districtName' && (\n                  <div>\n                    {sortData.isAscending && <TriangleDownIcon />}\n                    {!sortData.isAscending && <TriangleUpIcon />}\n                  </div>\n                )}\n              </div>\n            </td>\n\n            {PRIMARY_STATISTICS.map((statistic) => (\n              <DistrictHeaderCell\n                key={statistic}\n                {...{statistic, sortData, handleSortClick}}\n              />\n            ))}\n          </tr>\n        </React.Fragment>\n      )}\n\n      {showDistricts &&\n        Object.keys(data.districts)\n          .sort((a, b) => sortingFunction(a, b))\n          .map((districtName) => (\n            <DistrictRow\n              key={districtName}\n              {...{\n                districtName,\n                regionHighlighted,\n                setRegionHighlighted,\n                stateCode,\n              }}\n              data={data.districts[districtName]}\n            />\n          ))}\n\n      {showDistricts && (\n        <tr className=\"is-spacer\">\n          <td colSpan={5}>\n            <p />\n          </td>\n        </tr>\n      )}\n    </React.Fragment>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (!equal(prevProps.data?.total, currProps.data?.total)) {\n    return false;\n  } else if (!equal(prevProps.data?.delta, currProps.data?.delta)) {\n    return false;\n  } else if (\n    (!equal(\n      prevProps.regionHighlighted.stateCode,\n      currProps.regionHighlighted.stateCode\n    ) &&\n      equal(prevProps.regionHighlighted.stateCode, prevProps.stateCode)) ||\n    equal(currProps.regionHighlighted.stateCode, currProps.stateCode)\n  ) {\n    return false;\n  } else if (\n    (!equal(\n      prevProps.regionHighlighted.districtName,\n      currProps.regionHighlighted.districtName\n    ) &&\n      equal(\n        prevProps.regionHighlighted.districtName,\n        prevProps.districtName\n      )) ||\n    equal(currProps.regionHighlighted.districtName, currProps.districtName)\n  ) {\n    return false;\n  } else return true;\n};\n\nexport default React.memo(Row, isEqual);\n","import Row from './row';\n\nimport {PRIMARY_STATISTICS} from '../constants';\nimport {capitalize, abbreviate, getStatistic} from '../utils/commonfunctions';\n\nimport {TriangleUpIcon, TriangleDownIcon} from '@primer/octicons-v2-react';\nimport classnames from 'classnames';\nimport equal from 'fast-deep-equal';\nimport produce from 'immer';\nimport React, {useCallback} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {Link} from 'react-router-dom';\nimport {useTrail, animated, config} from 'react-spring';\nimport {createBreakpoint, useLocalStorage} from 'react-use';\n\nconst useBreakpoint = createBreakpoint({XL: 1280, L: 768, S: 350});\n\nfunction PureStateHeaderCell({handleSort, sortData, statistic}) {\n  const breakpoint = useBreakpoint();\n  const {t} = useTranslation();\n\n  return (\n    <th onClick={() => handleSort(statistic)}>\n      <div className=\"heading-content\">\n        <abbr\n          className={classnames({[`is-${statistic}`]: breakpoint === 'S'})}\n          title={capitalize(statistic)}\n        >\n          {breakpoint === 'S'\n            ? capitalize(statistic.slice(0, 1))\n            : breakpoint === 'L'\n            ? capitalize(abbreviate(statistic))\n            : capitalize(t(statistic))}\n        </abbr>\n        {sortData.sortColumn === statistic && (\n          <div>\n            {sortData.isAscending && <TriangleUpIcon />}\n            {!sortData.isAscending && <TriangleDownIcon />}\n            <div />\n          </div>\n        )}\n      </div>\n    </th>\n  );\n}\n\nconst isStateHeaderCellEqual = (prevProps, currProps) => {\n  if (!equal(prevProps.sortData, currProps.sortData)) {\n    return false;\n  } else {\n    return true;\n  }\n};\n\nconst StateHeaderCell = React.memo(PureStateHeaderCell, isStateHeaderCellEqual);\n\nfunction PureFineprintTop() {\n  const {t} = useTranslation();\n\n  return (\n    <React.Fragment>\n      <h5 className=\"table-fineprint\">\n        {t('Compiled from State Govt. numbers')},{' '}\n        <Link to=\"/about\" style={{color: '#6c757d'}}>\n          {t('know more')}!\n        </Link>\n      </h5>\n    </React.Fragment>\n  );\n}\nconst FineprintTop = React.memo(PureFineprintTop);\n\nfunction Table({data, regionHighlighted, setRegionHighlighted}) {\n  const {t} = useTranslation();\n\n  const [sortData, setSortData] = useLocalStorage('sortData', {\n    sortColumn: 'confirmed',\n    isAscending: false,\n  });\n\n  const handleSortClick = useCallback(\n    (statistic) => {\n      setSortData(\n        produce(sortData, (draftSortData) => {\n          draftSortData.isAscending = !sortData.isAscending;\n          draftSortData.sortColumn = statistic;\n        })\n      );\n    },\n    [sortData, setSortData]\n  );\n\n  const sortingFunction = useCallback(\n    (stateCodeA, stateCodeB) => {\n      if (sortData.sortColumn !== 'stateName') {\n        const statisticA = getStatistic(\n          data[stateCodeA],\n          'total',\n          sortData.sortColumn\n        );\n        const statisticB = getStatistic(\n          data[stateCodeB],\n          'total',\n          sortData.sortColumn\n        );\n        return sortData.isAscending\n          ? statisticA - statisticB\n          : statisticB - statisticA;\n      } else {\n        return sortData.isAscending\n          ? stateCodeA.localeCompare(stateCodeB)\n          : stateCodeB.localeCompare(stateCodeA);\n      }\n    },\n    [sortData, data]\n  );\n\n  const [trail, set] = useTrail(2, () => ({\n    transform: 'translate3d(0, 10px, 0)',\n    opacity: 0,\n    config: config.wobbly,\n  }));\n\n  set({transform: 'translate3d(0, 0px, 0)', opacity: 1});\n\n  return (\n    <React.Fragment>\n      <animated.span style={trail[0]}>\n        <FineprintTop />\n      </animated.span>\n\n      <animated.table className=\"table\" style={trail[1]}>\n        <thead>\n          <tr>\n            <th\n              className=\"state-heading\"\n              onClick={() => handleSortClick('stateName')}\n            >\n              <div className=\"heading-content\">\n                <abbr title=\"State\">{t('State/UT')}</abbr>\n                {sortData.sortColumn === 'stateName' && (\n                  <div>\n                    {sortData.isAscending && <TriangleDownIcon />}\n                    {!sortData.isAscending && <TriangleUpIcon />}\n                  </div>\n                )}\n              </div>\n            </th>\n            {PRIMARY_STATISTICS.map((statistic) => (\n              <StateHeaderCell\n                key={statistic}\n                {...{statistic, sortData}}\n                handleSort={() => {\n                  handleSortClick(statistic);\n                }}\n              />\n            ))}\n          </tr>\n        </thead>\n\n        <tbody>\n          {Object.keys(data)\n            .filter(\n              (stateCode) =>\n                stateCode !== 'TT' && data[stateCode].total?.confirmed\n            )\n            .sort((a, b) => sortingFunction(a, b))\n            .map((stateCode) => {\n              return (\n                <Row\n                  key={stateCode}\n                  data={data[stateCode]}\n                  {...{stateCode, regionHighlighted, setRegionHighlighted}}\n                />\n              );\n            })}\n        </tbody>\n\n        <tbody>\n          <Row\n            key={'TT'}\n            data={data['TT']}\n            stateCode={'TT'}\n            {...{regionHighlighted, setRegionHighlighted}}\n          />\n        </tbody>\n      </animated.table>\n    </React.Fragment>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (\n    !equal(\n      prevProps.regionHighlighted.districtName,\n      currProps.regionHighlighted.districtName\n    )\n  ) {\n    return false;\n  } else if (\n    !equal(\n      prevProps.regionHighlighted.stateCode,\n      currProps.regionHighlighted.stateCode\n    )\n  ) {\n    return false;\n  } else if (\n    !equal(\n      prevProps.data['TT'].total.confirmed,\n      currProps.data['TT'].total.confirmed\n    )\n  ) {\n    return false;\n  } else return true;\n};\n\nexport default React.memo(Table, isEqual);\n","import produce from 'immer';\nimport {useState} from 'react';\nimport {useUpdateEffect} from 'react-use';\nimport useSWR from 'swr';\n\nexport function useStickySWR(key, fetcher, swrOptions, ...args) {\n  const [options, setOptions] = useState(swrOptions);\n\n  const {data, isValidating, error, ...rest} = useSWR(\n    key,\n    fetcher,\n    options,\n    ...args\n  );\n\n  useUpdateEffect(() => {\n    setOptions(\n      produce(options, (draftOptions) => {\n        draftOptions.initialData = data;\n      })\n    );\n  }, [data]);\n\n  return {\n    ...rest,\n    isValidating,\n    error,\n    data,\n  };\n}\n\nexport default useStickySWR;\n","import Actions from './actions';\nimport Footer from './footer';\nimport Level from './level';\nimport MapExplorer from './mapexplorer';\nimport Minigraph from './minigraph';\nimport Search from './search';\nimport Table from './table';\nimport TimeSeriesExplorer from './timeseriesexplorer';\n\nimport 'intersection-observer';\n\nimport {MAP_META} from '../constants';\nimport useStickySWR from '../hooks/usestickyswr';\nimport {fetcher} from '../utils/commonfunctions';\n\nimport React, {useState, useRef} from 'react';\nimport {Helmet} from 'react-helmet';\nimport {useIsVisible} from 'react-is-visible';\n\nfunction Home(props) {\n  const [regionHighlighted, setRegionHighlighted] = useState({\n    stateCode: 'TT',\n    districtName: null,\n  });\n\n  const [anchor, setAnchor] = useState(null);\n  const [mapStatistic, setMapStatistic] = useState('confirmed');\n\n  const [date, setDate] = useState('');\n\n  const {data: timeseries} = useStickySWR(\n    'https://api.covid19india.org/v3/min/timeseries.min.json',\n    fetcher,\n    {\n      revalidateOnFocus: false,\n    }\n  );\n\n  const {data} = useStickySWR(\n    `https://api.covid19india.org/v3/min/data${\n      date ? `-${date}` : ''\n    }.min.json`,\n    fetcher,\n    {\n      revalidateOnMount: true,\n      refreshInterval: 100000,\n      revalidateOnFocus: false,\n    }\n  );\n\n  const homeRightElement = useRef();\n  const isVisible = useIsVisible(homeRightElement, {once: true});\n\n  const stateCodes = [\n    'TT',\n    ...[\n      ...new Set([\n        ...Object.keys(MAP_META).filter((stateCode) => stateCode !== 'TT'),\n        ...Object.keys(data || {}).filter((stateCode) => stateCode !== 'TT'),\n      ]),\n    ].sort(),\n  ];\n\n  return (\n    <React.Fragment>\n      {data && timeseries && (\n        <div className=\"Home\">\n          <Helmet>\n            <title>Coronavirus Outbreak in India - covid19india.org</title>\n            <meta\n              name=\"title\"\n              content=\"Coronavirus Outbreak in India: Latest Map and Case Count\"\n            />\n          </Helmet>\n\n          <div className=\"home-left\">\n            <div className=\"header\">\n              <Search />\n\n              <Actions\n                {...{\n                  setDate,\n                  dates: Object.keys(timeseries['TT']).reverse(),\n                  date,\n                }}\n              />\n            </div>\n\n            <Level data={data['TT']} />\n            <Minigraph timeseries={timeseries['TT']} {...{date}} />\n            <Table {...{data, regionHighlighted, setRegionHighlighted}} />\n          </div>\n\n          <div className=\"home-right\" ref={homeRightElement}>\n            {isVisible && (\n              <React.Fragment>\n                <MapExplorer\n                  stateCode=\"TT\"\n                  {...{data}}\n                  {...{mapStatistic, setMapStatistic}}\n                  {...{regionHighlighted, setRegionHighlighted}}\n                  {...{anchor, setAnchor}}\n                />\n\n                <TimeSeriesExplorer\n                  timeseries={timeseries[regionHighlighted.stateCode]}\n                  {...{date, stateCodes}}\n                  {...{regionHighlighted, setRegionHighlighted}}\n                  {...{anchor, setAnchor}}\n                />\n              </React.Fragment>\n            )}\n          </div>\n        </div>\n      )}\n      <Footer />\n    </React.Fragment>\n  );\n}\n\nexport default Home;\n"],"sourceRoot":""}